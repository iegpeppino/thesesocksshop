{"version":3,"sources":["components/SearchBox.js","constants/userConstants.js","constants/orderConstants.js","actions/userActions.js","components/Header.js","components/Rating.js","components/Product.js","constants/productConstants.js","actions/productActions.js","components/Loader.js","components/Paginate.js","components/ErrMessage.js","components/ProductCarousel.js","pages/HomePage.js","pages/ProductPage.js","constants/cartConstants.js","actions/cartActions.js","pages/CartPage.js","components/FormContainer.js","pages/LoginPage.js","pages/RegisterPage.js","pages/ProfilePage.js","actions/orderActions.js","components/CheckoutSteps.js","pages/ShippingPage.js","pages/PaymentPage.js","pages/PlaceOrderPage.js","pages/OrderDetailPage.js","pages/OrderListPage.js","pages/UserListPage.js","pages/UserEditPage.js","pages/ProductListPage.js","pages/ProductEditPage.js","App.js","store.js","reducers/productReducers.js","reducers/cartReducers.js","reducers/userReducers.js","reducers/orderReducers.js","index.js"],"names":["SearchBox","useState","keyword","setKeyword","history","useHistory","Form","className","onSubmit","e","preventDefault","push","location","pathname","Control","type","name","onChange","target","value","Button","variant","USER_LOGIN_SUCCESS","USER_DETAILS_SUCCESS","ORDER_CREATE_REQUEST","ORDER_CREATE_SUCCESS","ORDER_CREATE_FAIL","ORDER_CREATE_RESET","ORDER_DETAILS_REQUEST","ORDER_DETAILS_SUCCESS","ORDER_DETAILS_FAIL","ORDER_PAY_REQUEST","ORDER_PAY_SUCCESS","ORDER_PAY_FAIL","ORDER_PAY_RESET","ORDER_LIST_MY_REQUEST","ORDER_LIST_MY_SUCCESS","ORDER_LIST_MY_FAIL","ORDER_LIST_MY_RESET","ORDER_LIST_REQUEST","ORDER_LIST_SUCCESS","ORDER_LIST_FAIL","ORDER_DELIVER_REQUEST","ORDER_DELIVER_SUCCESS","ORDER_DELIVER_FAIL","ORDER_DELIVER_RESET","getUserDetails","id","dispatch","getState","a","userInfo","userLogin","config","headers","Authorization","token","axios","get","data","payload","response","detail","message","Header","useSelector","state","useDispatch","Navbar","bg","expand","collapseOnSelect","Container","to","Brand","Toggle","Collapse","Nav","Link","NavDropdown","title","Item","onClick","localStorage","removeItem","isAdmin","Rating","text","color","style","Product","product","Card","_id","Img","src","image","Body","Title","as","Text","price","rating","numReviews","PRODUCT_LIST_REQUEST","PRODUCT_LIST_SUCCESS","PRODUCT_LIST_FAIL","PRODUCT_DETAILS_SUCCESS","PRODUCT_DETAILS_FAIL","listProducts","listProductDetails","Loader","Spinner","animation","role","height","width","margin","display","Paginate","pages","page","split","Pagination","Array","keys","map","x","active","ErrMessage","children","Alert","ProductCarousel","productTopRated","error","loading","products","useEffect","Carousel","pause","Image","alt","fluid","Caption","HomePage","match","productList","search","console","log","Row","Col","sm","md","lg","xl","ProductPage","qty","setQty","setRating","comment","setComment","productDetails","productReviewCreate","loadingProductReview","errorProductReview","successProductReview","success","params","ListGroup","description","countInStock","xs","disabled","reviews","length","review","createdAt","substring","productId","post","Group","Label","controlId","row","CART_ADD_ITEM","CART_REMOVE_ITEM","CART_SAVE_SHIPPING_ADDRESS","CART_SAVE_PAYMENT_METHOD","CART_CLEAR_ITEMS","addToCart","setItem","JSON","stringify","cart","cartItems","CartPage","Number","removeFromCartHandler","removeFromCart","fontSize","textAlign","item","rounded","reduce","acc","FormContainer","LoginPage","email","setEmail","password","setPassword","redirect","login","placeholder","RegisterPage","setName","confirmPassword","setConfirmPassword","errMessage","setErrMessage","userRegister","register","required","ProfilePage","userDetails","user","userUpdateProfile","orderListMy","loadingOrders","errorOrders","orders","boxShadow","backgroundColor","put","updateUserProfile","Table","striped","responsive","order","totalPrice","isPaid","paidAt","CheckoutSteps","step1","step2","step3","step4","ShippingPage","shippingAddress","address","setAddress","city","setCity","postalCode","setPostalCode","country","setCountry","PaymentPage","paymentMethod","setPaymentMethod","Check","label","checked","PlaceOrderPage","orderCreate","itemsPrice","toFixed","shippingPrice","taxPrice","index","createOrder","orderItems","OrderDetailPage","orderId","sdkReady","setSdkReady","orderDetails","orderPay","loadingPay","successPay","orderDeliver","loadingDeliver","successDeliver","window","paypal","script","document","createElement","async","onload","body","appendChild","addPayPalScript","href","isDelivered","deliveredAt","amount","onSuccess","paymentResult","payOrder","deliverOrder","OrderListPage","orderList","bordered","hover","UserListPage","userList","users","successDelete","userDelete","deleteHandler","confirm","delete","deleteUser","UserEditPage","userId","setIsAdmin","userUpdate","errorUpdate","loadingUpdate","successUpdate","updateUser","ProductListPage","productDelete","loadingDelete","errorDelete","productCreate","loadingCreate","errorCreate","successCreate","createdProduct","deleteProduct","category","brand","ProductEditPage","setPrice","setImage","setBrand","setCategory","setCountInStock","setDescription","uploading","setUploading","productUpdate","uploadFileHandler","file","files","formData","FormData","append","updateProduct","File","custom","App","component","path","exact","reducer","combineReducers","action","existItem","find","filter","ayload","valueOf","cartItemsFromStorage","getItem","parse","userInfoFromStorage","initialState","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.99b54198.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport { Button, Form } from 'react-bootstrap'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\n// useHistory to add parameters to the URL address \r\n\r\nfunction SearchBox() {\r\n    const [keyword, setKeyword] = useState('')\r\n\r\n    let history = useHistory()\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        if(keyword){\r\n            history.push(`/?keyword=${keyword}&page=1`)\r\n        } else {\r\n            history.push(history.push(history.location.pathname))\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Form className= 'd-flex mx-2' onSubmit={submitHandler} >\r\n                <Form.Control\r\n                type= 'text'\r\n                name= 'q'\r\n                onChange={(e) => setKeyword(e.target.value)}\r\n                className= 'mr-sm-2 ml-sm-5'>\r\n\r\n                </Form.Control>\r\n\r\n                <Button \r\n                type= 'submit'\r\n                variant= 'outline-light'\r\n                className= 'p-2'>\r\n                    Search\r\n                </Button>\r\n            </Form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchBox\r\n","export const USER_LOGIN_REQUEST = 'USER_LOGIN_REQUEST'\r\nexport const USER_LOGIN_SUCCESS = 'USER_LOGIN_SUCCESS'\r\nexport const USER_LOGIN_FAIL = 'USER_LOGIN_FAIL'\r\nexport const USER_LOGOUT = 'USER_LOGOUT'\r\n\r\nexport const USER_REGISTER_REQUEST = 'USER_REGISTER_REQUEST'\r\nexport const USER_REGISTER_SUCCESS = 'USER_REGISTER_SUCCESS'\r\nexport const USER_REGISTER_FAIL = 'USER_REGISTER_FAIL'\r\n\r\nexport const USER_DETAILS_REQUEST = 'USER_DETAILS_REQUEST'\r\nexport const USER_DETAILS_SUCCESS = 'USER_DETAILS_SUCCESS'\r\nexport const USER_DETAILS_FAIL = 'USER_DETAILS_FAIL'\r\nexport const USER_DETAILS_RESET = 'USER_DETAILS_RESET'\r\n\r\n\r\nexport const USER_UPDATE_PROFILE_REQUEST = 'USER_UPDATE_PROFILE_REQUEST'\r\nexport const USER_UPDATE_PROFILE_SUCCESS = 'USER_UPDATE_PROFILE_SUCCESS'\r\nexport const USER_UPDATE_PROFILE_FAIL = 'USER_UPDATE_PROFILE_FAIL'\r\nexport const USER_UPDATE_PROFILE_RESET = 'USER_UPDATE_PROFILE_RESET'\r\n\r\nexport const USER_LIST_REQUEST = 'USER_LIST_REQUEST'\r\nexport const USER_LIST_SUCCESS = 'USER_LIST_SUCCESS'\r\nexport const USER_LIST_FAIL = 'USER_LIST_FAIL'\r\nexport const USER_LIST_RESET = 'USER_LIST_RESET'\r\n\r\nexport const USER_DELETE_REQUEST = 'USER_DELETE_REQUEST'\r\nexport const USER_DELETE_SUCCESS = 'USER_DELETE_SUCCESS'\r\nexport const USER_DELETE_FAIL = 'USER_DELETE_FAIL'\r\nexport const USER_DELETE_RESET = 'USER_DELETE_RESET'\r\n\r\nexport const USER_UPDATE_REQUEST = 'USER_UPDATE_REQUEST'\r\nexport const USER_UPDATE_SUCCESS = 'USER_UPDATE_SUCCESS'\r\nexport const USER_UPDATE_FAIL = 'USER_UPDATE_FAIL'\r\nexport const USER_UPDATE_RESET = 'USER_UPDATE_RESET'","export const ORDER_CREATE_REQUEST = 'ORDER_CREATE_REQUEST'\r\nexport const ORDER_CREATE_SUCCESS = 'ORDER_CREATE_SUCCESS'\r\nexport const ORDER_CREATE_FAIL = 'ORDER_CREATE_FAIL'\r\n\r\nexport const ORDER_CREATE_RESET = 'ORDER_CREATE_RESET'\r\n\r\nexport const ORDER_DETAILS_REQUEST = 'ORDER_DETAILS_REQUEST'\r\nexport const ORDER_DETAILS_SUCCESS = 'ORDER_DETAILS_SUCCESS'\r\nexport const ORDER_DETAILS_FAIL = 'ORDER_DETAILS_FAIL'\r\n\r\nexport const ORDER_PAY_REQUEST = 'ORDER_PAY_REQUEST'\r\nexport const ORDER_PAY_SUCCESS = 'ORDER_PAY_SUCCESS'\r\nexport const ORDER_PAY_FAIL = 'ORDER_PAY_FAIL'\r\nexport const ORDER_PAY_RESET = 'ORDER_PAY_RESET'\r\n\r\nexport const ORDER_LIST_MY_REQUEST = 'ORDER_LIST_MY_REQUEST'\r\nexport const ORDER_LIST_MY_SUCCESS = 'ORDER_LIST_MY_SUCCESS'\r\nexport const ORDER_LIST_MY_FAIL = 'ORDER_LIST_MY_FAIL'\r\nexport const ORDER_LIST_MY_RESET = 'ORDER_LIST_MY_RESET'\r\n\r\nexport const ORDER_LIST_REQUEST = 'ORDER_LIST_REQUEST'\r\nexport const ORDER_LIST_SUCCESS = 'ORDER_LIST_SUCCESS'\r\nexport const ORDER_LIST_FAIL = 'ORDER_LIST_FAIL'\r\n\r\nexport const ORDER_DELIVER_REQUEST = 'ORDER_DELIVER_REQUEST'\r\nexport const ORDER_DELIVER_SUCCESS = 'ORDER_DELIVER_SUCCESS'\r\nexport const ORDER_DELIVER_FAIL = 'ORDER_DELIVER_FAIL'\r\nexport const ORDER_DELIVER_RESET = 'ORDER_DELIVER_RESET'","import { USER_LOGIN_REQUEST,\r\n        USER_LOGIN_SUCCESS,\r\n        USER_LOGIN_FAIL,\r\n        USER_LOGOUT,\r\n\r\n        USER_REGISTER_REQUEST,\r\n        USER_REGISTER_SUCCESS,\r\n        USER_REGISTER_FAIL,\r\n\r\n        USER_DETAILS_REQUEST,\r\n        USER_DETAILS_SUCCESS,\r\n        USER_DETAILS_FAIL,\r\n        USER_DETAILS_RESET,\r\n\r\n        USER_UPDATE_PROFILE_REQUEST,\r\n        USER_UPDATE_PROFILE_SUCCESS,\r\n        USER_UPDATE_PROFILE_FAIL,\r\n        USER_UPDATE_PROFILE_RESET,\r\n\r\n        USER_LIST_REQUEST,\r\n        USER_LIST_SUCCESS,\r\n        USER_LIST_FAIL,\r\n        USER_LIST_RESET,\r\n\r\n        USER_DELETE_REQUEST,\r\n        USER_DELETE_SUCCESS,\r\n        USER_DELETE_FAIL,\r\n\r\n        USER_UPDATE_REQUEST,\r\n        USER_UPDATE_SUCCESS,\r\n        USER_UPDATE_FAIL,\r\n        } from '../constants/userConstants'\r\nimport { ORDER_LIST_MY_RESET } from '../constants/orderConstants'\r\nimport axios from 'axios'\r\n\r\n\r\nexport const login = (email, password) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_LOGIN_REQUEST\r\n        })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            '/api/users/login/',\r\n            { 'username': email, 'password': password },\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_LOGIN_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const logout = ()  => (dispatch) => {\r\n    localStorage.removeItem('userInfo')\r\n    dispatch( { type: USER_LOGOUT } )\r\n    dispatch( { type: USER_DETAILS_RESET } )\r\n    dispatch( { type: ORDER_LIST_MY_RESET } )\r\n    dispatch( { type: USER_LIST_RESET } )\r\n}\r\n\r\n\r\nexport const register = (name, email, password) => async (dispatch) => {\r\n    try{\r\n\r\n        dispatch({\r\n            type: USER_REGISTER_REQUEST,\r\n        })\r\n\r\n        const config = {\r\n            headers:{\r\n                'Content-type' : 'application/json'\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n                '/api/users/register/',\r\n                { 'name': name, 'email': email, 'password': password },\r\n                config\r\n            )\r\n\r\n        dispatch({\r\n            type: USER_REGISTER_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        // When we register we also want to automatically sign in our user\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n\r\n    } catch(error) {\r\n        dispatch({\r\n            type: USER_REGISTER_FAIL,\r\n            payload: error.response && error.response.data.detail \r\n            ? error.response.data.message\r\n            : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const getUserDetails = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_DETAILS_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(\r\n            `/api/users/${id}/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(\r\n            `/api/users/profile/update/`,\r\n            user,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n        \r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const listUsers = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_LIST_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(\r\n            `/api/users/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_LIST_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_LIST_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const deleteUser = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_DELETE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.delete(\r\n            `/api/users/delete/${id}`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_DELETE_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_DELETE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const updateUser = (user) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_UPDATE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(\r\n            `/api/users/update/${user._id}`,\r\n            user,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_UPDATE_SUCCESS,\r\n            \r\n        })\r\n\r\n        dispatch({\r\n            type: USER_DETAILS_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_UPDATE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}","import React from 'react'\r\nimport { Navbar, Nav, Container, Row, NavDropdown} from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport SearchBox from './SearchBox'\r\nimport { logout } from '../actions/userActions'\r\n\r\nfunction Header(){\r\n\r\n    const userLogin = useSelector((state) => state.userLogin)\r\n    const {userInfo} = userLogin\r\n    \r\n    const dispatch = useDispatch()\r\n\r\n    const logoutHandler = () => {\r\n        dispatch(logout( ))\r\n    }\r\n\r\n\r\n    return (\r\n            <header>\r\n                <Navbar bg=\"info\" variant=\"dark\" expand=\"lg\" collapseOnSelect>\r\n                    <Container>\r\n                        <LinkContainer to='/' className='justify-content-start'>\r\n                            <Navbar.Brand id='nav-title' ><i className='fas fa-socks'></i>These Socks Shop</Navbar.Brand>\r\n                        </LinkContainer>\r\n                        <Navbar.Toggle aria-controls=\"basic-navbar-nav\"/>\r\n                        <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                                <SearchBox  />\r\n                            <Nav className=\"m-auto\" >\r\n                                <LinkContainer to='/cart' className= 'mx-3'>\r\n                                    <Nav.Link><i className='fas fa-shopping-cart'></i> Cart</Nav.Link>\r\n                                </LinkContainer>\r\n                                {userInfo ? (\r\n                                    <NavDropdown title= {userInfo.name} id= 'username'>\r\n                                        <LinkContainer to='/profile'>\r\n                                            <NavDropdown.Item>\r\n                                                Profile\r\n                                            </NavDropdown.Item>\r\n                                        </LinkContainer>\r\n                                        <NavDropdown.Item onClick={logoutHandler}>\r\n                                                LogOut\r\n                                        </NavDropdown.Item>\r\n                                    </NavDropdown>\r\n                                ):(\r\n                                <LinkContainer  to='/login'>\r\n                                    <Nav.Link><i className='fas fa-user'></i> Login</Nav.Link>\r\n                                </LinkContainer>)}\r\n\r\n                                {userInfo && userInfo.isAdmin && (\r\n                                    <NavDropdown  variant='info' title= 'Admin' id= 'adminmenu'>\r\n                                        <LinkContainer to='/admin/userlist'>\r\n                                            <NavDropdown.Item>\r\n                                                Users\r\n                                            </NavDropdown.Item>\r\n                                        </LinkContainer>\r\n                                        \r\n                                        <LinkContainer to='/admin/productlist'>\r\n                                            <NavDropdown.Item>\r\n                                                Products\r\n                                            </NavDropdown.Item>\r\n                                        </LinkContainer>\r\n\r\n                                        <LinkContainer to='/admin/orderlist'>\r\n                                            <NavDropdown.Item>\r\n                                                Orders\r\n                                            </NavDropdown.Item>\r\n                                        </LinkContainer>\r\n                                    </NavDropdown>\r\n                                )}\r\n                            </Nav>\r\n                        </Navbar.Collapse>\r\n                    </Container>\r\n                </Navbar>\r\n            </header>   \r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\n\r\nfunction Rating({ value, text, color }) {\r\n    return (\r\n        <div className= 'rating'>\r\n            <span>\r\n                <i style={{ color }} className= {\r\n                    value >= 1 \r\n                    ? 'fas fa-star'\r\n                    : value >= 0.5\r\n                    ? 'fas fa-star-half-alt'\r\n                    : 'far fa-star'\r\n                }>\r\n                </i>\r\n            </span>\r\n            <span>\r\n                <i style={{ color }} className= {\r\n                    value >= 2 \r\n                    ? 'fas fa-star'\r\n                    : value >= 1.5\r\n                    ? 'fas fa-star-half-alt'\r\n                    : 'far fa-star'\r\n                }>\r\n                </i>\r\n            </span>\r\n            <span>\r\n                <i style={{ color }} className= {\r\n                    value >= 3 \r\n                    ? 'fas fa-star'\r\n                    : value >= 2.5\r\n                    ? 'fas fa-star-half-alt'\r\n                    : 'far fa-star'\r\n                }>\r\n                </i>\r\n            </span>\r\n            <span>\r\n                <i style={{ color }} className= {\r\n                    value >= 4 \r\n                    ? 'fas fa-star'\r\n                    : value >= 3.5\r\n                    ? 'fas fa-star-half-alt'\r\n                    : 'far fa-star'\r\n                }>\r\n                </i>\r\n            </span>\r\n            <span>\r\n                <i style={{ color }} className= {\r\n                    value >= 5\r\n                    ? 'fas fa-star'\r\n                    : value >= 4.5\r\n                    ? 'fas fa-star-half-alt'\r\n                    : 'far fa-star'\r\n                }>\r\n                </i>\r\n            </span>\r\n            <span>\r\n                  {' / '}{text && text}\r\n            </span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Rating\r\n","import React from 'react'\r\nimport { Card } from 'react-bootstrap'\r\nimport Rating from './Rating'\r\nimport { Link } from 'react-router-dom'\r\n\r\n\r\nfunction Product({ product }) {\r\n    return (\r\n        <Card className= \"my-3 p-3 rounded\" id='card' >\r\n            <Link to={`/product/${product._id}`} className= 'card-image'>\r\n                <Card.Img src={product.image} />\r\n            </Link>\r\n            <Card.Body>\r\n                <Link to={`/product/${product._id}`}>\r\n                    <Card.Title as='div' className='mt-2'>\r\n                        <strong><h5>{product.name}</h5></strong>\r\n                    </Card.Title>\r\n                </Link>\r\n                <Card.Text as='h4'>\r\n                        ${product.price}\r\n                </Card.Text>\r\n                <Card.Text as='div' className=\"mt-3\">\r\n                        <p>This product has:</p>\r\n                        <div >\r\n                            <Rating value={product.rating} text={`${product.numReviews} reviews`} color={'#f8e825'}/>\r\n                        </div>\r\n                </Card.Text>     \r\n            </Card.Body>\r\n        </Card>\r\n        \r\n    )\r\n}\r\n\r\nexport default Product\r\n","export const PRODUCT_LIST_REQUEST = 'PRODUCT_LIST_REQUEST'\r\nexport const PRODUCT_LIST_SUCCESS = 'PRODUCT_LIST_SUCCESS'\r\nexport const PRODUCT_LIST_FAIL = 'PRODUCT_LIST_FAIL'\r\n\r\nexport const PRODUCT_DETAILS_REQUEST = 'PRODUCT_DETAILS_REQUEST'\r\nexport const PRODUCT_DETAILS_SUCCESS = 'PRODUCT_DETAILS_SUCCESS'\r\nexport const PRODUCT_DETAILS_FAIL = 'PRODUCT_DETAILS_FAIL'\r\n\r\nexport const PRODUCT_DELETE_REQUEST = 'PRODUCT_DELETE_REQUEST'\r\nexport const PRODUCT_DELETE_SUCCESS = 'PRODUCT_DELETE_SUCCESS'\r\nexport const PRODUCT_DELETE_FAIL = 'PRODUCT_DELETE_FAIL'\r\n\r\nexport const PRODUCT_CREATE_REQUEST = 'PRODUCT_CREATE_REQUEST'\r\nexport const PRODUCT_CREATE_SUCCESS = 'PRODUCT_CREATE_SUCCESS'\r\nexport const PRODUCT_CREATE_FAIL = 'PRODUCT_CREATE_FAIL'\r\nexport const PRODUCT_CREATE_RESET = 'PRODUCT_CREATE_RESET'\r\n\r\nexport const PRODUCT_UPDATE_REQUEST = 'PRODUCT_UPDATE_REQUEST'\r\nexport const PRODUCT_UPDATE_SUCCESS = 'PRODUCT_UPDATE_SUCCESS'\r\nexport const PRODUCT_UPDATE_FAIL = 'PRODUCT_UPDATE_FAIL'\r\nexport const PRODUCT_UPDATE_RESET = 'PRODUCT_UPDATE_RESET'\r\n\r\nexport const PRODUCT_CREATE_REVIEW_REQUEST = 'PRODUCT_CREATE_REVIEW_REQUEST'\r\nexport const PRODUCT_CREATE_REVIEW_SUCCESS = 'PRODUCT_CREATE_REVIEW_SUCCESS'\r\nexport const PRODUCT_CREATE_REVIEW_FAIL = 'PRODUCT_CREATE_REVIEW_FAIL'\r\nexport const PRODUCT_CREATE_REVIEW_RESET = 'PRODUCT_CREATE_REVIEW_RESET'\r\n\r\nexport const PRODUCT_TOP_REQUEST = 'PRODUCT_TOP_REQUEST'\r\nexport const PRODUCT_TOP_SUCCESS = 'PRODUCT_TOP_SUCCESS'\r\nexport const PRODUCT_TOP_FAIL = 'PRODUCT_TOP_FAIL'","import axios from 'axios'\r\nimport { PRODUCT_LIST_REQUEST,\r\n         PRODUCT_LIST_SUCCESS,\r\n         PRODUCT_LIST_FAIL,\r\n\r\n         PRODUCT_DETAILS_REQUEST,\r\n         PRODUCT_DETAILS_SUCCESS,\r\n         PRODUCT_DETAILS_FAIL,\r\n\r\n         PRODUCT_DELETE_REQUEST,\r\n         PRODUCT_DELETE_SUCCESS,\r\n         PRODUCT_DELETE_FAIL,\r\n        \r\n         PRODUCT_CREATE_REQUEST,\r\n         PRODUCT_CREATE_SUCCESS,\r\n         PRODUCT_CREATE_FAIL,\r\n        \r\n        PRODUCT_UPDATE_REQUEST,\r\n        PRODUCT_UPDATE_SUCCESS,\r\n        PRODUCT_UPDATE_FAIL,\r\n    \r\n        PRODUCT_CREATE_REVIEW_REQUEST,\r\n        PRODUCT_CREATE_REVIEW_SUCCESS,\r\n        PRODUCT_CREATE_REVIEW_FAIL,\r\n\r\n         PRODUCT_TOP_REQUEST,\r\n         PRODUCT_TOP_SUCCESS,\r\n         PRODUCT_TOP_FAIL,\r\n        } from '../constants/productConstants'\r\n     \r\n\r\n\r\nexport const listProducts = ( keyword= '') => async (dispatch) => {\r\n    try{\r\n        dispatch({type: PRODUCT_LIST_REQUEST})\r\n        \r\n        const { data } = await axios.get(`/api/products${keyword}`)\r\n        \r\n        dispatch({\r\n            type: PRODUCT_LIST_SUCCESS,\r\n            payload: data\r\n        })\r\n        \r\n    }catch(error){\r\n        dispatch({\r\n            type: PRODUCT_LIST_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n            ? error.response.data.message\r\n            : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const listTopProducts = () => async (dispatch) => {\r\n    try{\r\n        dispatch({type: PRODUCT_TOP_REQUEST})\r\n        \r\n        const { data } = await axios.get(`/api/products/top`)\r\n        \r\n        dispatch({\r\n            type: PRODUCT_TOP_SUCCESS,\r\n            payload: data\r\n        })\r\n        \r\n    }catch(error){\r\n        dispatch({\r\n            type: PRODUCT_TOP_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n            ? error.response.data.message\r\n            : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const listProductDetails = (id) => async (dispatch) => {\r\n    try{\r\n        dispatch({type: PRODUCT_DETAILS_REQUEST})\r\n        \r\n        const { data } = await axios.get(`/api/products/${id}`)\r\n        \r\n        dispatch({\r\n            type: PRODUCT_DETAILS_SUCCESS,\r\n            payload: data,\r\n        })\r\n        \r\n    }catch(error){\r\n        dispatch({\r\n            type: PRODUCT_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.detail \r\n            ? error.response.data.message\r\n            : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const deleteProduct = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_DELETE_REQUEST\r\n        })\r\n\r\n\r\n        // The user needs to be logged in to view the order\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.delete(\r\n            `/api/products/delete/${id}`,\r\n            config,\r\n        )\r\n\r\n        dispatch({\r\n            type: PRODUCT_DELETE_SUCCESS,\r\n        })\r\n\r\n        \r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const createProduct = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REQUEST\r\n        })\r\n\r\n\r\n        // The user needs to be logged in to view the order\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            `/api/products/create/`,\r\n            {},\r\n            config,\r\n        )\r\n\r\n        dispatch({\r\n            type: PRODUCT_CREATE_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n        \r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_CREATE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const updateProduct = (product) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_UPDATE_REQUEST\r\n        })\r\n\r\n\r\n        // The user needs to be logged in to view the order\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(\r\n            `/api/products/update/${product._id}/`,\r\n            product,\r\n            config,\r\n        )\r\n\r\n        dispatch({\r\n            type: PRODUCT_UPDATE_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n        \r\n        dispatch({\r\n            type: PRODUCT_DETAILS_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_UPDATE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const createProductReview = (productId, review) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REVIEW_REQUEST\r\n        })\r\n\r\n\r\n        // The user needs to be logged in to view the order\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            `/api/products/${productId}/reviews/`,\r\n            review,\r\n            config,\r\n        )\r\n\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REVIEW_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REVIEW_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}","import React from 'react'\r\nimport {Spinner} from 'react-bootstrap'\r\n\r\nconst Loader = () => {\r\n    return (\r\n        <Spinner animation= 'border'\r\n                role= 'status'\r\n                style= {{ \r\n                        height:'100px',\r\n                        width:'100px',\r\n                        margin:'auto',\r\n                        display:'block',\r\n                }}>\r\n        </Spinner>\r\n    )\r\n}\r\n\r\n\r\nexport default Loader\r\n","import React from 'react'\r\nimport { Pagination } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\n\r\nfunction Paginate({ pages, page, keyword= '', isAdmin= false }) {\r\n    \r\n    if(keyword){\r\n        keyword = keyword.split('?keyword=')[1].split('&')[0]\r\n    }\r\n\r\n    return (\r\n        pages > 1 && (\r\n         <Pagination >\r\n             {[...Array(pages).keys()].map((x) => (\r\n                <LinkContainer \r\n                    key= {x + 1}\r\n                    to={!isAdmin ?\r\n                        `/?keyword=${keyword}&page=${x + 1}`\r\n                        :\r\n                        `/admin/productlist/?keyword=${keyword}&page=${x + 1}`\r\n                        }>\r\n                        <Pagination.Item active={x + 1 === page}>\r\n                            {x + 1}\r\n                        </Pagination.Item>\r\n                </LinkContainer>\r\n             ))}\r\n         </Pagination>   \r\n        )\r\n    )\r\n}\r\n\r\nexport default Paginate\r\n","import React from 'react'\r\nimport { Alert } from 'react-bootstrap'\r\n\r\nconst ErrMessage = ({variant, children}) => {\r\n    return (\r\n        <Alert variant={variant}>\r\n            {children}\r\n        </Alert>\r\n    )\r\n}\r\n\r\n\r\nexport default ErrMessage\r\n","import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector }from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { Carousel, Image } from 'react-bootstrap'\r\nimport Loader from './Loader'\r\nimport ErrMessage from './ErrMessage'\r\nimport { listTopProducts } from '../actions/productActions'\r\n\r\nfunction ProductCarousel() {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    // This needs to have the same name as the store saved state \r\n    const productTopRated = useSelector((state) => state.productTopRated)\r\n    const { error, loading, products } = productTopRated   \r\n\r\n    useEffect(() => {\r\n\r\n        dispatch(listTopProducts())\r\n\r\n    }, [dispatch])\r\n\r\n    return (loading ? <Loader />\r\n        : error\r\n            ? <ErrMessage variant='danger'>{error}</ErrMessage>\r\n            : (\r\n                <Carousel pause='hover' variant='dark'>\r\n                    {products.map(product => (\r\n                        <Carousel.Item key={product._id}>\r\n                            <Link to={`/product/${product._id}`}>\r\n                                <Image src={product.image} alt={product.name} fluid />\r\n                                <Carousel.Caption className='carousel.caption'>\r\n                                    <h4><span>{product.name} (${product.price})</span></h4>\r\n                                </Carousel.Caption>\r\n                            </Link>\r\n                        </Carousel.Item>\r\n                    ))}\r\n                </Carousel>\r\n            )\r\n\r\n    )\r\n}\r\n\r\nexport default ProductCarousel\r\n","import React, { useState, useEffect } from 'react'\r\nimport { useLocation } from 'react-router'\r\nimport { Row, Col } from 'react-bootstrap'\r\nimport Product from '../components/Product'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { listProducts } from '../actions/productActions'\r\nimport Loader from '../components/Loader'\r\nimport Paginate from '../components/Paginate'\r\nimport ErrMessage from '../components/ErrMessage'\r\nimport ProductCarousel from '../components/ProductCarousel'\r\n\r\n\r\nconst HomePage = ({ history, match }) => {\r\n    \r\n    const dispatch = useDispatch()\r\n\r\n    const productList = useSelector(state => state.productList)\r\n    const { error, loading, products, page, pages} = productList\r\n\r\n    \r\n    let keyword = history.location.search\r\n\r\n    console.log(keyword)\r\n\r\n    useEffect(() => {\r\n        dispatch(listProducts(keyword))\r\n    },[dispatch, keyword])\r\n\r\n    return (\r\n        <div className='mb-5'>\r\n            {(keyword.split('&')[0].split('=')[1] === '' || keyword === '') && \r\n            <div className='tp-container'>\r\n                <div className='car-container'>\r\n                    <ProductCarousel/>\r\n                </div>\r\n                <div className= 'tp-title'>\r\n                    <h2><mark>Check out our</mark></h2>\r\n                    <h2><mark>top rated</mark></h2>\r\n                    <h2><mark>products!!</mark></h2>\r\n                </div>\r\n            </div>}\r\n            <h1 className='lt-products'>Latest Products</h1>\r\n            {loading ? <Loader />\r\n            :error ? <ErrMessage variant='danger'>{error}</ErrMessage>:\r\n            <div>\r\n                <Row>\r\n                    {products.map(product => (\r\n                        <Col key={product._id} sm={12} md={6} lg={4} xl={3}>\r\n                            <Product product={product}/>\r\n                        </Col>\r\n                    ))}\r\n                </Row>\r\n\r\n                <Paginate page={page} pages={pages} keyword={keyword ? keyword : \"\"}/>\r\n            </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HomePage","import React, {useState, useEffect} from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Row, Col, Image, ListGroup, Button, Card, Form, Container } from 'react-bootstrap'\r\nimport Rating from '../components/Rating'\r\nimport Loader from '../components/Loader'\r\nimport ErrMessage from '../components/ErrMessage'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { listProductDetails, createProductReview } from '../actions/productActions'\r\nimport { PRODUCT_CREATE_REVIEW_RESET } from '../constants/productConstants'\r\n\r\nfunction ProductPage({match, history}){\r\n    const [qty, setQty] = useState(1)\r\n    const [rating, setRating] = useState(0)\r\n    const [comment, setComment] = useState('')\r\n    \r\n    const dispatch = useDispatch()\r\n\r\n    const productDetails = useSelector((state) => state.productDetails)\r\n    const { loading, error, product } = productDetails\r\n    \r\n    const userLogin = useSelector((state) => state.productDetails)\r\n    const { userInfo } = userLogin\r\n\r\n    const productReviewCreate = useSelector(state => state.productReviewCreate)\r\n    const { loading: loadingProductReview,\r\n            error: errorProductReview,\r\n            success: successProductReview } = productReviewCreate\r\n\r\n    useEffect(() => {\r\n\r\n        if(successProductReview){\r\n            setRating(0)\r\n            setComment('')\r\n            dispatch({ type: PRODUCT_CREATE_REVIEW_RESET })\r\n        }\r\n\r\n        dispatch(listProductDetails(match.params.id))\r\n    },[dispatch, match])\r\n    \r\n    const addToCartHandle = () => {\r\n        history.push(`/cart/${match.params.id}?qty=${qty}`)\r\n    }\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(createProductReview(\r\n            match.params.id,\r\n            {\r\n                rating,\r\n                comment,\r\n            }\r\n        ))\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Link to= '/' className= 'btn btn-info my-3' variant='info'>\r\n                Go back\r\n            </Link>\r\n            {loading ?\r\n                <Loader />\r\n                : error \r\n                ? <ErrMessage variant= 'danger'>{error}</ErrMessage>\r\n                :\r\n                <div>\r\n                    <Container id=\"product-details\">\r\n                        <Row >\r\n                            <Col md={6} id='product-show'>\r\n                                <Image src={product.image} alt={product.name}   fluid/>\r\n                            </Col>\r\n                            <Col md={4} >\r\n                                <Card>\r\n                                    <ListGroup variant='flush'>\r\n                                        <ListGroup.Item>\r\n                                            <h3>{product.name}</h3>\r\n                                        </ListGroup.Item>\r\n                                    </ListGroup>\r\n                                    <ListGroup.Item>\r\n                                        <Rating value={product.numReviews} text={`${product.numReviews} reviews`} color={'#f8e825'}/>\r\n                                    </ListGroup.Item>\r\n                                    <ListGroup.Item>\r\n                                        Price :  $ {product.price}\r\n                                    </ListGroup.Item>\r\n                                    <ListGroup.Item>\r\n                                        Details : {product.description}\r\n                                    </ListGroup.Item>\r\n                        \r\n                                    <ListGroup variant='flush'>\r\n                                        <ListGroup.Item>\r\n                                            <Row>\r\n                                                <Col>\r\n                                                    Price:\r\n                                                </Col>\r\n                                                <Col>\r\n                                                <strong>\r\n                                                    $ {product.price}\r\n                                                </strong>\r\n                                                </Col>\r\n                                            </Row>\r\n                                        </ListGroup.Item>\r\n                                        <ListGroup.Item>\r\n                                            <Row>\r\n                                                <Col>\r\n                                                    Status\r\n                                                </Col>\r\n                                                <Col>\r\n                                                <i>{product.countInStock > 0 ? 'In Stock' : 'Out of Stock'}</i>\r\n                                                </Col>\r\n                                            </Row>\r\n                                        </ListGroup.Item>\r\n                                        {product.countInStock > 0 && (\r\n                                        <ListGroup.Item>\r\n                                            <Row>\r\n                                                <Col>Qty</Col>\r\n                                                <Col xs='auto' className='my-1'>\r\n                                                    <Form.Control\r\n                                                        as='select'\r\n                                                        value={qty}\r\n                                                        onChange={(e) => setQty(e.target.value)}>\r\n                                                            {\r\n                                                                [...Array(product.countInStock).keys()].map((x) => (\r\n                                                                    <option key={x + 1} value={x + 1}>\r\n                                                                        { x + 1 }\r\n                                                                    </option>\r\n                                                                ))\r\n                                                            }\r\n                                                    </Form.Control>\r\n                                                </Col>\r\n                                            </Row>\r\n                                        </ListGroup.Item>)}\r\n                                        <ListGroup.Item>\r\n                                            <Button\r\n                                                onClick={addToCartHandle}\r\n                                                className='btn-block'\r\n                                                disabled={product.countInStock === 0}\r\n                                                type='button'>\r\n                                                Add to Cart\r\n                                            </Button>\r\n                                        </ListGroup.Item>\r\n                                    </ListGroup>\r\n                                </Card>\r\n                            </Col>\r\n                        </Row>\r\n                    </Container>\r\n\r\n                    <Row>\r\n                        <Col md={6} lg={10} id='add-review' >\r\n                            <ListGroup variant= 'dark' className='my-5'>\r\n                                <ListGroup.Item className='pt-3'>\r\n                                    <h4>Reviews</h4>\r\n                                    {product.reviews.length === 0 && <ErrMessage variant= 'info'>No Reviews</ErrMessage>}\r\n                                </ListGroup.Item>\r\n                                {product.reviews.map((review) => (\r\n                                    <ListGroup.Item key={review._id}>\r\n                                        <p><strong>User : {review.name}</strong></p>\r\n                                            <Rating value={review.rating} color='#F8E825'/>\r\n                                        <p>{review.createdAt.substring(0,10)}</p>\r\n                                        <p>Review : {review.comment}</p>\r\n                                    </ListGroup.Item>\r\n                                ))}\r\n                            </ListGroup>\r\n                            <ListGroup variant= 'dark' >\r\n                                <ListGroup.Item className='pt-3'>\r\n                                    <h4>Write a Review</h4>\r\n                                </ListGroup.Item>\r\n                                <ListGroup.Item>\r\n                                    {loadingProductReview && <Loader />}\r\n                                    {successProductReview && <ErrMessage variant='success'>Review Submitted</ErrMessage>}\r\n                                    {errorProductReview && <ErrMessage variant='danger'>{errorProductReview}</ErrMessage>}\r\n\r\n                                    {!userInfo ? (\r\n                                        <Form onSubmit={submitHandler}>\r\n                                            <Form.Group className='my-2'>\r\n                                                <Form.Label>Rating</Form.Label>\r\n                                                <Form.Control\r\n                                                as= 'select'\r\n                                                value= {rating}\r\n                                                onChange={(e) => setRating(e.target.value)}>\r\n                                                    <option value=''>Select...</option>\r\n                                                    <option value='1'>1 - Poor</option>\r\n                                                    <option value='2'>2 - Fair</option>\r\n                                                    <option value='3'>3 - Good</option>\r\n                                                    <option value='4'>4 - Very Good</option>\r\n                                                    <option value='5'>5 - Excellent</option>\r\n                                                </Form.Control>\r\n                                            </Form.Group>\r\n\r\n                                            <Form.Group controlId='comment' className='my-2'>\r\n                                                <Form.Label>Review</Form.Label>\r\n                                                <Form.Control\r\n                                                as='textarea'\r\n                                                row='5'\r\n                                                value={comment}\r\n                                                onChange={(e) => setComment(e.target.value)}>\r\n\r\n                                                </Form.Control>\r\n                                            </Form.Group>\r\n\r\n                                            <Button\r\n                                            disabled={loadingProductReview}\r\n                                            type='submit'\r\n                                            variant='info'\r\n                                            className='btn btn-block my-2'>\r\n                                                Submit\r\n                                            </Button>\r\n                                        </Form>\r\n                                    ) : ( \r\n                                        <ErrMessage variant= 'info'\r\n                                        > Please <Link to= '/login'>login</Link> to write a review</ErrMessage>\r\n                                    )}\r\n                                </ListGroup.Item>\r\n                            </ListGroup>\r\n                        </Col>\r\n                    </Row>\r\n                </div>\r\n        }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProductPage\r\n","export const CART_ADD_ITEM = 'CART_ADD_ITEM'\r\nexport const CART_REMOVE_ITEM = 'CART_REMOVE_ITEM'\r\nexport const CART_SAVE_SHIPPING_ADDRESS = 'CART_SAVE_SHIPPING_ADDRESS'\r\n\r\nexport const CART_SAVE_PAYMENT_METHOD = 'CART_SAVE_PAYMENT_METHOD'\r\n\r\nexport const CART_CLEAR_ITEMS = 'CART_CLEAR_ITEMS'","import axios from \"axios\"\r\nimport { CART_ADD_ITEM ,\r\n       CART_REMOVE_ITEM,\r\n       CART_SAVE_SHIPPING_ADDRESS,\r\n       CART_SAVE_PAYMENT_METHOD, } from '../constants/cartConstants'\r\n\r\nexport const addToCart = (id, qty) => async (dispatch, getState) => {\r\n    const {data} = await axios.get(`/api/products/${id}`)\r\n\r\n    \r\n    dispatch({\r\n        type: CART_ADD_ITEM,\r\n        payload: {\r\n            product: data._id,\r\n            name: data.name,\r\n            image: data.image,\r\n            price: data.price,\r\n            countInStock: data.countInStock,\r\n            qty,\r\n        },\r\n    })\r\n\r\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\r\n   \r\n}\r\n\r\nexport const removeFromCart = (id) => (dispatch, getState) => {\r\n\r\n    dispatch({\r\n        type: CART_REMOVE_ITEM,\r\n        payload: id,\r\n    })\r\n    \r\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\r\n}\r\n\r\nexport const saveShippingAddress = (data) => (dispatch) => {\r\n\r\n    dispatch({\r\n        type: CART_SAVE_SHIPPING_ADDRESS,\r\n        payload: data,\r\n    })\r\n    \r\n    localStorage.setItem('shippingAddress', JSON.stringify(data))\r\n}\r\n\r\nexport const savePaymentMethod = (data) => (dispatch) => {\r\n\r\n    dispatch({\r\n        type: CART_SAVE_PAYMENT_METHOD,\r\n        payload: data,\r\n    })\r\n    \r\n    localStorage.setItem('paymentMethod', JSON.stringify(data))\r\n}","import React, { useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Row, Col, ListGroup, Image, Form, Button, Card, ListGroupItem } from 'react-bootstrap'\r\nimport  ErrMessage  from '../components/ErrMessage'\r\nimport { addToCart, removeFromCart } from '../actions/cartActions'\r\n\r\n\r\nfunction CartPage({match, location, history}){\r\n    const productId = match.params.id\r\n    // qty is equals to the value represented on the URL  ex:http://shop.com/?qty=3 ,\r\n    // if theres no value it is equals to 1\r\n    const qty = location.search ? Number(location.search.split('=')[1]) : 1\r\n    \r\n    // We only want to fire our \"addToCart\" when we have a productId value and a qty value\r\n    const dispatch = useDispatch()\r\n    \r\n    const cart = useSelector((state) => state.cart)\r\n    const { cartItems } = cart \r\n    \r\n    useEffect(() => {\r\n        if (productId) {\r\n            dispatch(addToCart(productId, qty))\r\n        }\r\n    }, [dispatch, productId, qty])\r\n\r\n\r\n    const removeFromCartHandler = (id) => {\r\n        dispatch(removeFromCart(id))\r\n    }\r\n\r\n    const checkoutHandler = () => {\r\n        history.push('/shipping')\r\n        // history.push('/login?redirect=shipping') didn't work\r\n    }\r\n\r\n    return (\r\n        <Row>\r\n            <div id='sc-title'>\r\n                <h1 style={{fontSize:\"2.5rem\" ,color:\"#1d1d1d\", textAlign:'center'}}>Shopping Cart</h1>\r\n            </div>\r\n            <Col md={8}>\r\n                \r\n                {cartItems.length === 0 ? (\r\n                    <ErrMessage variant='info'>\r\n                        Your cart is empty <Link to='/'> Go Back </Link>\r\n                    </ErrMessage>\r\n                ): (\r\n                    <ListGroup variant='dark' id='my-cart'>\r\n                        <ListGroup.Item>\r\n                            <Row className='text-center'>\r\n                                <Col md={4}>\r\n                                    <p>Product :</p>\r\n                                </Col>\r\n                                <Col md={3}>\r\n                                    <p>Price :</p>\r\n                                </Col>\r\n                                <Col md={3}>\r\n                                    <p>Quantity :</p>\r\n                                </Col>\r\n                                <Col md={1}>\r\n                                    <p>Remove?</p>\r\n                                </Col>\r\n                            </Row>\r\n                        </ListGroup.Item>\r\n                        {cartItems.map(item => (\r\n                            <ListGroup.Item key={item.product}>\r\n                                <Row className='align-items-center text-center p-2'>\r\n                                        <Col md={2}>\r\n                                            <Image src={item.image} alt={item.name} fluid rounded/>\r\n                                        </Col>\r\n                                        <Col md={2}>\r\n                                            <Link to={`/product/${item.product}`}>\r\n                                                {item.name}\r\n                                            </Link>\r\n                                        </Col>\r\n                                    <Col md={3} className='pl-2'>\r\n                                        ${item.price}\r\n                                    </Col>\r\n                                    <Col md={3}>\r\n                                        <Form.Control \r\n                                                as='select'\r\n                                                value={item.qty}\r\n                                                onChange={(e) => dispatch(addToCart(item.product, Number(e.target.value)))}>\r\n                                                    {\r\n                                                        [...Array(item.countInStock).keys()].map((x) => (\r\n                                                            <option key={x + 1} value={x + 1}>\r\n                                                                { x + 1 }\r\n                                                            </option>\r\n                                                        ))\r\n                                                    }\r\n                                        </Form.Control>\r\n                                    </Col>\r\n                                    <Col md={1}>\r\n                                        <Button\r\n                                        type= 'button'\r\n                                        variant= 'light'\r\n                                        className='align-item-center'\r\n                                        onClick={() => removeFromCartHandler(item.product)}>\r\n                                            <i className='fas fa-trash'></i>\r\n                                        </Button>\r\n                                    </Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                        ))}\r\n                    </ListGroup>\r\n                )\r\n                }\r\n            </Col>\r\n            <Col md= {4}>\r\n                    <Card>\r\n                        <ListGroup variant='flush'>\r\n                            <ListGroup.Item>\r\n                                <h2> SubTotal ({cartItems.reduce((acc, item) => acc + item.qty, 0)}) items </h2>\r\n                                ${cartItems.reduce((acc, item) => acc + item.qty * item.price, 0)} \r\n                            </ListGroup.Item>\r\n                        </ListGroup>\r\n                        <ListGroup.Item>\r\n                            <Button\r\n                            type= 'button'\r\n                            className= 'btn-block'\r\n                            variant='outline-info'\r\n                            disabled= {cartItems.length === 0}\r\n                            onClick= {checkoutHandler}>\r\n                                Proceed to Checkout\r\n                            </Button>\r\n                        </ListGroup.Item>\r\n                    </Card>\r\n                </Col>\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default CartPage\r\n","import React, { Children } from 'react'\r\nimport { Container, Row, Col} from 'react-bootstrap'\r\n\r\n\r\n\r\nfunction FormContainer({children}) {\r\n    return (\r\n        <Container>\r\n            <Row className= 'justify-content-md-center'>\r\n                <Col xs={12} md={6}>\r\n                    {children}\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default FormContainer\r\n","import React, {useState, useEffect} from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Row, Col} from 'react-bootstrap'\r\nimport Loader from '../components/Loader'\r\nimport ErrMessage from '../components/ErrMessage'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { login } from '../actions/userActions'\r\nimport FormContainer from '../components/FormContainer'\r\n\r\nfunction LoginPage({location, history}) {\r\n\r\n    const  [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const redirect = location.search ? location.search.split('=')[0] : '/'\r\n\r\n    const userLogin = useSelector((state) => state.userLogin)\r\n\r\n    const {error, loading, userInfo} = userLogin\r\n\r\n    useEffect(() => {\r\n        if(userInfo){\r\n            history.push(redirect)\r\n        }\r\n    },[history, userInfo, redirect])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(login(email, password))\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <h1>Sign In</h1>\r\n            {error && <ErrMessage variant= 'danger'>{error}</ErrMessage>}\r\n            {loading && <Loader />}\r\n            <Form onSubmit= {submitHandler}>\r\n                <Form.Group controlId= 'email'>\r\n                    <Form.Label>\r\n                        Email Address\r\n                    </Form.Label>\r\n                    <Form.Control \r\n                        type= 'email'\r\n                        placeholder= 'address@email.com'\r\n                        value= {email}\r\n                        onChange={(e) => setEmail(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId= 'password'>\r\n                    <Form.Label>\r\n                        Password\r\n                    </Form.Label>\r\n                    <Form.Control \r\n                        type= 'password'\r\n                        placeholder= 'your password here'\r\n                        value= {password}\r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Button \r\n                type= 'submit' \r\n                variant= 'primary'\r\n                disabled= {userInfo}>\r\n                    Sign In\r\n                </Button>\r\n            </Form>\r\n\r\n            \r\n\r\n            <Row className= 'py-3'>\r\n                <Col>\r\n                    New Customer ? <Link to= {redirect ? `/register?redirect=${redirect}`: '/register'}>\r\n                        Register\r\n                    </Link>\r\n                </Col>\r\n            </Row>\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default LoginPage\r\n","import React, {useState, useEffect} from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Row, Col, LinkContainer} from 'react-bootstrap'\r\nimport Loader from '../components/Loader'\r\nimport ErrMessage from '../components/ErrMessage'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { register } from '../actions/userActions'\r\nimport FormContainer from '../components/FormContainer'\r\n\r\nfunction RegisterPage( {location, history} ) {\r\n\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n    const [errMessage, setErrMessage] = useState('')\r\n\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    \r\n    const redirect = location.search ? location.search.split('=')[0] : '/'\r\n\r\n    const userRegister = useSelector((state) => state.userRegister)\r\n\r\n    const {error, loading, userInfo} = userRegister\r\n\r\n    useEffect(() => {\r\n        if(userInfo){\r\n            history.push(redirect)\r\n        }\r\n    },[history, userInfo, redirect])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        if(password != confirmPassword) {\r\n            setErrMessage('Passwords do not match')\r\n        }else {\r\n            dispatch(register(name, email, password))\r\n        }\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <h1>Register</h1>\r\n            {errMessage && <ErrMessage variant= 'danger'>{errMessage}</ErrMessage>}\r\n            {error && <ErrMessage variant= 'danger'>{error}</ErrMessage>}\r\n            {loading && <Loader />}\r\n            <Form onSubmit= {submitHandler}>\r\n                <Form.Group controlId= 'name'>\r\n                    <Form.Label>\r\n                        Name\r\n                    </Form.Label>\r\n                    <Form.Control \r\n                        type= 'name'\r\n                        placeholder= 'Enter name'\r\n                        required\r\n                        value= {name}\r\n                        onChange={(e) => setName(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId= 'email'>\r\n                    <Form.Label>\r\n                        Email Address\r\n                    </Form.Label>\r\n                    <Form.Control \r\n                        type= 'email'\r\n                        placeholder= 'address@email.com'\r\n                        required\r\n                        value= {email}\r\n                        onChange={(e) => setEmail(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId= 'password'>\r\n                    <Form.Label>\r\n                        Password\r\n                    </Form.Label>\r\n                    <Form.Control \r\n                        type= 'password'\r\n                        placeholder= 'your password here'\r\n                        required\r\n                        value= {password}\r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId= 'confirmPassword'>\r\n                    <Form.Label>\r\n                        Password\r\n                    </Form.Label>\r\n                    <Form.Control \r\n                        type= 'password'\r\n                        placeholder= 'Confirm password'\r\n                        required\r\n                        value= {confirmPassword}\r\n                        onChange={(e) => setConfirmPassword(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Button type='submit' variant='primary'>\r\n                    Register\r\n                </Button>\r\n\r\n            </Form>\r\n\r\n            <Row className= 'py-3'>\r\n                <Col>\r\n                    Already have account ? \r\n                    <Link to= {redirect ? `/login?redirect=${redirect}`: '/login'}>\r\n                        Sign In\r\n                    </Link>\r\n                </Col>\r\n            </Row>\r\n        </FormContainer>\r\n        \r\n    )\r\n}\r\n\r\nexport default RegisterPage\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Form, Button, Row, Col, Table} from 'react-bootstrap'\r\nimport Loader from '../components/Loader'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport ErrMessage from '../components/ErrMessage'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { getUserDetails, updateUserProfile } from '../actions/userActions'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { USER_UPDATE_PROFILE_RESET } from '../constants/userConstants'\r\nimport { listMyOrders } from '../actions/orderActions'\r\n\r\nfunction ProfilePage({ history }) {\r\n\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n    const [errMessage, setErrMessage] = useState('')\r\n\r\n\r\n    const dispatch = useDispatch()\r\n\r\n\r\n    const userDetails = useSelector((state) => state.userDetails)\r\n    const { error, loading, user } = userDetails\r\n\r\n    const userLogin = useSelector((state) => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const userUpdateProfile = useSelector((state) => state.userUpdateProfile)\r\n    const { success } = userUpdateProfile\r\n\r\n    const orderListMy = useSelector((state) => state.orderListMy)\r\n    const { loading: loadingOrders, error: errorOrders, orders } = orderListMy\r\n\r\n    useEffect(() => {\r\n        if(!userInfo){\r\n            history.push('/login')\r\n        } else {\r\n            if(!user || !user.name || success || userInfo._id !== user._id){\r\n                dispatch({\r\n                    type: 'USER_UPDATE_PROFILE_RESET'\r\n                })\r\n                dispatch(getUserDetails('profile'))\r\n                dispatch(listMyOrders())\r\n            } else{\r\n                setName(user.name)\r\n                setEmail(user.email)\r\n            }\r\n        }\r\n    },[history, userInfo, dispatch, user, success])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        if(password !== confirmPassword) {\r\n            setErrMessage('Passwords do not match')\r\n        }else {\r\n            dispatch(updateUserProfile({\r\n                'id': user._id,\r\n                'name': name,\r\n                'email': email,\r\n                'password': password,\r\n            }))\r\n            setErrMessage('')\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        \r\n        <Row>\r\n            <Col md= {3} className='m-3' style={{boxShadow: '0 4px 8px 0 rgba(0,0,0,0.1)',\r\n             backgroundColor:'rgba(255, 255, 255, 0.95)'}}>\r\n                <h2 className='p-3'>User Profile</h2>\r\n                {errMessage && <ErrMessage variant= 'danger'>{errMessage}</ErrMessage>}\r\n                {error && <ErrMessage variant= 'danger'>{error}</ErrMessage>}\r\n                {loading && <Loader />}\r\n                <Form onSubmit= {submitHandler}>\r\n                    <Form.Group controlId= 'name' className='mb-2'>\r\n                        <Form.Label>\r\n                            Name\r\n                        </Form.Label>\r\n                        <Form.Control \r\n                            type= 'name'\r\n                            placeholder= 'Enter name'\r\n                            value= {name}\r\n                            onChange={(e) => setName(e.target.value)}\r\n                        >\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId= 'email' className='mb-2'>\r\n                        <Form.Label>\r\n                            Email Address\r\n                        </Form.Label>\r\n                        <Form.Control \r\n                            type= 'email'\r\n                            placeholder= 'address@email.com'\r\n                            value= {email}\r\n                            onChange={(e) => setEmail(e.target.value)}\r\n                        >\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId= 'password' className='mb-2'>\r\n                        <Form.Label>\r\n                            Password\r\n                        </Form.Label>\r\n                        <Form.Control \r\n                            type= 'password'\r\n                            placeholder= 'your password here'\r\n                            value= {password}\r\n                            onChange={(e) => setPassword(e.target.value)}\r\n                        >\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId= 'confirmPassword' className='mb-2'>\r\n                        <Form.Label>\r\n                            Password\r\n                        </Form.Label>\r\n                        <Form.Control \r\n                            type= 'password'\r\n                            placeholder= 'Confirm password'\r\n                            value= {confirmPassword}\r\n                            onChange={(e) => setConfirmPassword(e.target.value)}\r\n                        >\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n                    <Button type='submit' variant='info' className= 'mt-3'>\r\n                        Update Profile\r\n                    </Button>\r\n                </Form>\r\n            </Col>\r\n\r\n            <Col md= {6} className='m-3' style={{boxShadow: '0 4px 8px 0 rgba(0,0,0,0.1)',\r\n             backgroundColor:'rgba(255, 255, 255, 0.95)'}}>\r\n                <h2 className='p-3 '>My orders</h2>\r\n\r\n                {loadingOrders ? (\r\n                    <Loader />\r\n                ) : errorOrders ? (\r\n                    <ErrMessage variant= 'danger'>{errorOrders}</ErrMessage>\r\n                ) : (\r\n                    <Table striped responsive className= 'table-sm'>\r\n                        <thead>\r\n                            <tr>\r\n                                <th>ID</th>\r\n                                <th>Date</th>\r\n                                <th>Total</th>\r\n                                <th>Paid</th>\r\n                                <th>Delivered</th>\r\n                                <th></th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {orders.map(order => (\r\n                                <tr key= {order._id}>\r\n                                    <td>{order._id}</td>\r\n                                    <td>{order.createdAt.substring(0, 10)}</td>\r\n                                    <td>$ {order.totalPrice}</td>\r\n                                    <td>{order.isPaid ? order.paidAt.substring(0, 10) : (\r\n                                        <i className='fas fa-times' style={{color: 'red'}}></i>\r\n                                    )}</td>\r\n                                    <td>\r\n                                        <LinkContainer to={`/order/${order._id}`}>\r\n                                            <Button className='btn btn-m' variant='info' >DETAILS</Button>\r\n                                        </LinkContainer>\r\n                                    </td>\r\n                                </tr>\r\n                            ))}\r\n                        </tbody>\r\n                    </Table>\r\n                )}\r\n            </Col>       \r\n        </Row>\r\n    )\r\n\r\n\r\n}\r\n\r\nexport default ProfilePage","import { ORDER_CREATE_REQUEST,\r\n        ORDER_CREATE_SUCCESS,\r\n        ORDER_CREATE_FAIL,\r\n\r\n        ORDER_DETAILS_REQUEST,\r\n        ORDER_DETAILS_SUCCESS,\r\n        ORDER_DETAILS_FAIL,\r\n\r\n        ORDER_PAY_REQUEST,\r\n        ORDER_PAY_SUCCESS,\r\n        ORDER_PAY_FAIL,\r\n        ORDER_PAY_RESET,\r\n\r\n        ORDER_LIST_MY_REQUEST,\r\n        ORDER_LIST_MY_SUCCESS,\r\n        ORDER_LIST_MY_FAIL,\r\n        ORDER_LIST_MY_RESET,\r\n       \r\n        ORDER_LIST_REQUEST,\r\n        ORDER_LIST_SUCCESS,\r\n        ORDER_LIST_FAIL,\r\n        ORDER_LIST_RESET,\r\n\r\n        ORDER_DELIVER_REQUEST,\r\n        ORDER_DELIVER_SUCCESS,\r\n        ORDER_DELIVER_FAIL,\r\n        ORDER_DELIVER_RESET,\r\n        } from '../constants/orderConstants'\r\nimport { CART_CLEAR_ITEMS } from '../constants/cartConstants'\r\nimport axios from 'axios'\r\n\r\nexport const createOrder = (order) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_CREATE_REQUEST\r\n        })\r\n\r\n\r\n        // The user needs to be logged in to place the order\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            `/api/orders/add/`,\r\n            order,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_CREATE_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        dispatch({\r\n            type: CART_CLEAR_ITEMS,\r\n            payload: data\r\n        })\r\n        \r\n        // After confirming the order, we clear the cartItems from our local storage\r\n        localStorage.removeItem('cartItems')\r\n        \r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_CREATE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const getOrderDetails = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_DETAILS_REQUEST\r\n        })\r\n\r\n\r\n        // The user needs to be logged in to view the order\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(\r\n            `/api/orders/${id}/`,\r\n            config,\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const payOrder = (id, paymentResult) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_PAY_REQUEST\r\n        })\r\n\r\n\r\n        // The user needs to be logged in to view the order\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(\r\n            `/api/orders/${id}/pay`,\r\n            paymentResult,\r\n            config,\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_PAY_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_PAY_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const deliverOrder = (order) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_DELIVER_REQUEST\r\n        })\r\n\r\n\r\n        // The user needs to be logged in to view the order\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(\r\n            `/api/orders/${order._id}/deliver/`,\r\n            {},\r\n            config,\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_DELIVER_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_DELIVER_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const listMyOrders = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_LIST_MY_REQUEST\r\n        })\r\n\r\n\r\n        // The user needs to be logged in to view the order\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(\r\n            `/api/orders/myorders/`,\r\n            config,\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_LIST_MY_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        \r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_LIST_MY_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const listOrders = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_LIST_REQUEST\r\n        })\r\n\r\n\r\n        // The user needs to be logged in to view the order\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(\r\n            `/api/orders/`,\r\n            config,\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_LIST_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        \r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_LIST_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}","import React from 'react'\r\nimport { Nav, nav } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\n\r\n\r\nfunction CheckoutSteps({ step1, step2, step3, step4 }){\r\n\r\n    return(\r\n        <Nav className= 'justify-content-center mb-4' id='chk-steps'>\r\n            <Nav.Item>\r\n                {step1 ? (\r\n                <LinkContainer to= '/login'>\r\n                    <Nav.Link>\r\n                        <p>Login</p>\r\n                    </Nav.Link>\r\n                </LinkContainer>\r\n                ) : (\r\n                     <Nav.Link disabled> Login </Nav.Link>\r\n                 )} \r\n            </Nav.Item>\r\n\r\n            <Nav.Item>\r\n                {step2 ? (\r\n                <LinkContainer to= '/shipping'>\r\n                    <Nav.Link>\r\n                        Shipping\r\n                    </Nav.Link>\r\n                </LinkContainer>\r\n                ) : (\r\n                     <Nav.Link disabled> Shipping </Nav.Link>\r\n                 )} \r\n            </Nav.Item>\r\n\r\n            <Nav.Item>\r\n                {step3 ? (\r\n                <LinkContainer to= '/payment'>\r\n                    <Nav.Link>\r\n                        Payment\r\n                    </Nav.Link>\r\n                </LinkContainer>\r\n                ) : (\r\n                     <Nav.Link disabled> Payment </Nav.Link>\r\n                 )} \r\n            </Nav.Item>\r\n\r\n            <Nav.Item>\r\n                {step4 ? (\r\n                <LinkContainer to= '/placeorder'>\r\n                    <Nav.Link>\r\n                        Place Order\r\n                    </Nav.Link>\r\n                </LinkContainer>\r\n                ) : (\r\n                     <Nav.Link disabled> Place Order </Nav.Link>\r\n                 )} \r\n            </Nav.Item>\r\n\r\n        </Nav>\r\n    )\r\n}\r\n\r\nexport default CheckoutSteps","import React, {useState, useEffect} from 'react'\r\nimport { Form, Button, LinkContainer, Card} from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { saveShippingAddress } from '../actions/cartActions'\r\nimport FormContainer from '../components/FormContainer'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\n\r\nfunction ShippingPage({ history }) {\r\n\r\n    const cart = useSelector((state) => state.cart)\r\n    const {shippingAddress} = cart\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const[address, setAddress] = useState(shippingAddress.address)\r\n    const[city, setCity] = useState(shippingAddress.city)\r\n    const[postalCode, setPostalCode] = useState(shippingAddress.postalCode)\r\n    const[country, setCountry] = useState(shippingAddress.country)\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(saveShippingAddress({ address, city, postalCode, country }))\r\n        history.push('/payment')\r\n    }\r\n\r\n    return (    \r\n        \r\n        <div>\r\n            <CheckoutSteps/>\r\n            <div >\r\n                <FormContainer className='shp-card'>\r\n                    <div id='sc-title'>\r\n                        <h1 style={{fontSize:\"2.5rem\" ,color:\"#121212\", textAlign:'center'}}>Shipping</h1>\r\n                    </div>\r\n                    <Form onSubmit= {submitHandler} className='shipping-form'>\r\n                        <Form.Group controlId= 'address'>\r\n                            <Form.Label>\r\n                                Address\r\n                            </Form.Label>\r\n                            <Form.Control\r\n                                type= 'text'\r\n                                placeholder= 'Enter address'\r\n                                value= {address ? address : ''}\r\n                                onChange={(e) => setAddress(e.target.value)}\r\n                            >\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n                        <Form.Group controlId= 'city'  className='mt-3'> \r\n                            <Form.Label >\r\n                                City\r\n                            </Form.Label>\r\n                            <Form.Control\r\n                                type= 'text'\r\n                                placeholder= 'Enter city'\r\n                                value= {city ? city : ''}\r\n                                onChange={(e) => setCity(e.target.value)}\r\n                                \r\n                            >\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n                        <Form.Group controlId= 'postalCode'  className='mt-3'>\r\n                            <Form.Label>\r\n                                Postal Code\r\n                            </Form.Label>\r\n                            <Form.Control\r\n                                type= 'text'\r\n                                placeholder= 'Enter Postal Code'\r\n                                value= {postalCode ? postalCode : ''}\r\n                                onChange={(e) => setPostalCode(e.target.value)}\r\n                            >\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n                        <Form.Group controlId= 'country'  className='mt-3'>\r\n                            <Form.Label>\r\n                                Country\r\n                            </Form.Label>\r\n                            <Form.Control\r\n                                type= 'text'\r\n                                placeholder= 'Enter country'\r\n                                value= {country ? country : ''}\r\n                                onChange={(e) => setCountry(e.target.value)}\r\n                            >\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n                        <Button type= 'submit' variant= 'outline-info' className='my-3'>\r\n                            Confirm Shipping\r\n                        </Button>\r\n                    </Form>\r\n                </FormContainer>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ShippingPage","import React, {useState, useEffect} from 'react'\r\nimport { Form, Button, LinkContainer, Col, Row, Card} from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { savePaymentMethod } from '../actions/cartActions'\r\nimport FormContainer from '../components/FormContainer'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\n\r\nfunction PaymentPage({ history }) {\r\n\r\n    const cart = useSelector((state) => state.cart)\r\n    const {shippingAddress} = cart\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const [paymentMethod, setPaymentMethod] = useState('PayPal')\r\n\r\n    if(!shippingAddress.address){\r\n        history.push('/shipping')\r\n    }\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(savePaymentMethod(paymentMethod))\r\n        history.push('/placeorder')\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <CheckoutSteps step1 step2 step3 step4/>\r\n            <FormContainer>\r\n                \r\n                <Card className='p-3'>\r\n                    <Form onSubmit= {submitHandler}>\r\n                        <Form.Group>\r\n                            <Form.Label as= 'legend'>\r\n                                Select Payment Method\r\n                            </Form.Label>\r\n                            <Col>\r\n                                <Form.Check\r\n                                    type= 'radio'\r\n                                    label= 'PayPal or Credit Card'\r\n                                    id= 'paypal'\r\n                                    name= 'paymentMethod'\r\n                                    checked\r\n                                    onChange= {(e) => setPaymentMethod(e.target.value)}\r\n                                >\r\n            \r\n                                </Form.Check>\r\n                            </Col>\r\n                        </Form.Group>\r\n            \r\n                        <Button type= 'submit' variant= 'outline-info' className='mt-3'>\r\n                            Save Payment Method\r\n                        </Button>\r\n            \r\n                    </Form>\r\n                </Card>\r\n            </FormContainer>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PaymentPage\r\n","import React, {useState, useEffect} from 'react'\r\nimport { Button, LinkContainer, Row, Col, ListGroup, Image, Card, ListGroupItem } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\nimport ErrMessage from '../components/ErrMessage'\r\nimport { createOrder } from '../actions/orderActions'\r\nimport { ORDER_CREATE_RESET } from '../constants/orderConstants'\r\n\r\n\r\nfunction PlaceOrderPage({ history }) {\r\n\r\n    const orderCreate = useSelector((state) => state.orderCreate)\r\n    const { order, error, success } = orderCreate\r\n    const dispatch = useDispatch()\r\n\r\n    const cart = useSelector((state) => state.cart)\r\n\r\n    // We map through the cart items and add the price to the accumulator , the acc starts at 0\r\n    cart.itemsPrice = cart.cartItems.reduce((acc, item) => acc + item.price * item.qty, 0).toFixed(2)\r\n    cart.shippingPrice = (cart.itemsPrice >100 ? 0 : 10).toFixed(2)\r\n    cart.taxPrice = (0.082) * cart.itemsPrice\r\n    cart.totalPrice = (Number(cart.itemsPrice) + Number(cart.shippingPrice) + Number(cart.taxPrice)).toFixed(2)\r\n\r\n    /* If we refresh the page and there's no payment method selected\r\n    we'll be redirected to the payment selection page*/\r\n    if(!cart.paymentMethod){\r\n        history.push('/payment')\r\n    }\r\n\r\n    useEffect(() =>{\r\n        if(success){\r\n            history.push(`/order/${order._id}`)\r\n            dispatch({ type: ORDER_CREATE_RESET })\r\n        }\r\n    },[success, history])\r\n\r\n    const placeOrder = () => {\r\n        dispatch(createOrder({\r\n            orderItems: cart.cartItems,\r\n            shippingAddress: cart.shippingAddress,\r\n            paymentMethod: cart.paymentMethod,\r\n            itemsPrice: cart.itemsPrice,\r\n            shippingPrice: cart.shippingPrice,\r\n            taxPrice: cart.taxPrice,\r\n            totalPrice: cart.totalPrice,\r\n        }))\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <CheckoutSteps step1 step2 step3 step4 />\r\n\r\n            <Row>\r\n                <Col md= {8} >\r\n                    <ListGroup style={{boxShadow: '0 4px 8px 0 rgba(0,0,0,0.1)'}}>\r\n                        <ListGroup.Item>\r\n                            <h2 className='border border-dark p-2'>Shipping</h2>\r\n                            <p className='p-2'>\r\n                                <strong>Shipping direction : </strong>\r\n                                {cart.shippingAddress.address}, {cart.shippingAddress.city},\r\n                                {'   '}\r\n                                PC:{cart.shippingAddress.postalCode},\r\n                                {'   '}\r\n                                {cart.shippingAddress.country}\r\n                            </p>\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <h2 className='border border-dark p-2'>Payment Method</h2>\r\n                            <p className='p-2'>\r\n                                <strong>Selected method :  </strong>\r\n                                {cart.paymentMethod}\r\n                            </p>\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <h2 className='border border-dark p-2'>Items Ordered</h2>\r\n                            {cart.cartItems.length === 0 ? \r\n                            <ErrMessage variant= 'info'>\r\n                                Your cart is empty !\r\n                            </ErrMessage> : (\r\n                                <ListGroup variant= 'dark'>\r\n                                    {cart.cartItems.map((item, index) => (\r\n                                        <ListGroup.Item key={index} className='p-2'>\r\n                                            <Row>\r\n                                                <Col>\r\n                                                    <Image src={item.image}  alt={item.name} fluid rounded/>\r\n                                                </Col>\r\n\r\n                                                <Col>\r\n                                                    <Row className='mb-2'>\r\n                                                        Product name :\r\n                                                    </Row>\r\n                                                    <Row>\r\n                                                        <Link to= {`/product/${item.product}`}>\r\n                                                            {item.name}\r\n                                                        </Link>\r\n                                                    </Row>\r\n                                                </Col>\r\n                                                <Col md= {4}>\r\n                                                    <Row className='mb-2'>\r\n                                                        Qty x Item Price = Total Price\r\n                                                    </Row>\r\n                                                    <Row>\r\n                                                        {/* with .toFixed(2) we only allow two decimals */}\r\n                                                        {item.qty} X ${item.price} = ${(item.qty * item.price).toFixed(2)}\r\n                                                    </Row>\r\n                                                </Col>\r\n                                            </Row>\r\n                                        </ListGroup.Item>\r\n                                    ))}\r\n                                </ListGroup>\r\n                            )}\r\n                        </ListGroup.Item>\r\n\r\n                    </ListGroup>\r\n                </Col>\r\n\r\n                <Col md= {4}>\r\n                    <Card>\r\n                        <ListGroup>\r\n                            <ListGroup.Item>\r\n                                <h2>Order Summary</h2>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Item:</Col>\r\n                                    <Col>{cart.itemsPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Shipping:</Col>\r\n                                    <Col>{cart.shippingPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Tax:</Col>\r\n                                    <Col>{cart.taxPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Total:</Col>\r\n                                    <Col>{cart.totalPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                               {error && <ErrMessage variant= 'danger'>\r\n                                        {error}\r\n                                </ErrMessage>}\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Button\r\n                                    type= 'button'\r\n                                    className= 'btn-block'\r\n                                    variant='outline-info'\r\n                                    disabled= {cart.cartItems === 0}\r\n                                    onClick= {placeOrder}\r\n                                >\r\n                                    Place Order\r\n                                </Button>\r\n                            </ListGroup.Item>\r\n\r\n                        </ListGroup>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PlaceOrderPage\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Button, LinkContainer, Row, Col, ListGroup, Image, Card, ListGroupItem } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport ErrMessage from '../components/ErrMessage'\r\nimport Loader from '../components/Loader'\r\nimport { getOrderDetails, payOrder, deliverOrder } from '../actions/orderActions'\r\nimport { PayPalButton } from 'react-paypal-button-v2'\r\nimport { ORDER_PAY_RESET, ORDER_DELIVER_RESET } from '../constants/orderConstants'\r\n\r\nfunction OrderDetailPage({ match, history }) {\r\n    const orderId = match.params.id\r\n    const dispatch = useDispatch()\r\n\r\n    const [sdkReady, setSdkReady] = useState(false)\r\n\r\n    const orderDetails = useSelector((state) => state.orderDetails)\r\n    const { order, error, loading } = orderDetails\r\n    \r\n    const orderPay = useSelector((state) => state.orderPay)\r\n    const {loading: loadingPay, success: successPay } = orderPay\r\n\r\n    const orderDeliver = useSelector((state) => state.orderDeliver)\r\n    const {loading: loadingDeliver, success: successDeliver } = orderDeliver\r\n\r\n    const userLogin = useSelector((state) => state.userLogin)\r\n    const { userInfo } = userLogin\r\n    \r\n    // We only calculate the order item price if we have an order\r\n    if(!loading && !error){\r\n        order.itemsPrice = order.orderItems.reduce((acc, item) => acc + item.price * item.qty, 0).toFixed(2)\r\n    }\r\n\r\n    const addPayPalScript = () => {\r\n        const script = document.createElement('script')\r\n        script.type = 'text/javascript'\r\n        script.src = \"https://www.paypal.com/sdk/js?client-id=AdYMM-p3IKOo9VIN1QQb_3IAStuJmW-wXoLOFq9h-pvl0_SYo-IN6TQtIUtoxuh3Xclhmr43BobfYtfG\"\r\n        script.async = true\r\n        script.onload = () => {\r\n            setSdkReady(true)\r\n        }\r\n        document.body.appendChild(script)\r\n    }\r\n\r\n\r\n    const successPaymentHandler = (paymentResult) => {\r\n        dispatch(payOrder(orderId, paymentResult))\r\n    }  \r\n\r\n    const deliverHandler = () => {\r\n        dispatch(deliverOrder(order))\r\n    }\r\n\r\n// PayPal client ID\r\n// AdYMM-p3IKOo9VIN1QQb_3IAStuJmW-wXoLOFq9h-pvl0_SYo-IN6TQtIUtoxuh3Xclhmr43BobfYtfG\r\n\r\n    useEffect(() =>{\r\n        if(!userInfo){\r\n            history.push('/login')\r\n        }\r\n        if(!order || successPay || order._id !== Number(orderId) || successDeliver){\r\n            dispatch({ type: ORDER_PAY_RESET })\r\n            dispatch({ type: ORDER_DELIVER_RESET })\r\n            dispatch(getOrderDetails(orderId))    \r\n        }else if(!order.isPaid){\r\n            if(!window.paypal){\r\n                addPayPalScript()\r\n            }else{\r\n                setSdkReady(true)\r\n            }\r\n        }\r\n        \r\n    },[successPay, dispatch, order, orderId, successDeliver])\r\n\r\n    return loading ? (\r\n        <Loader />\r\n    ): error ? ( \r\n        <ErrMessage variant= 'danger'>\r\n            {error}\r\n        </ErrMessage>) : (\r\n\r\n\r\n        \r\n        <div>\r\n            <h1> Order: {order._id} </h1>\r\n            <Row>\r\n                <Col md= {8}>\r\n                    <ListGroup style={{boxShadow: '0 4px 8px 0 rgba(0,0,0,0.1)'}}>\r\n                        <ListGroup.Item>\r\n                            <h2 className='border border-dark p-2'>Shipping</h2>\r\n                            <p><strong>Name: </strong>{order.user.name}</p>\r\n                            <p><strong>Email: </strong><a href={`mailto:${order.user.email}`}>{order.user.email}</a></p>\r\n                            <p>\r\n                                <strong>Shipping: </strong>\r\n                                {order.shippingAddress.address}, {order.shippingAddress.city},\r\n                                {'   '}\r\n                                PC:{order.shippingAddress.postalCode},\r\n                                {'   '}\r\n                                {order.shippingAddress.country}\r\n                            </p>\r\n\r\n                            {order.isDelivered ? (\r\n                                    <ErrMessage variant= 'success'>Delivered on {order.deliveredAt}</ErrMessage>\r\n                             ) : (\r\n                                    <ErrMessage variant= 'warning'>Not delivered</ErrMessage>\r\n                             )}\r\n\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <h2 className='border border-dark p-2'>Payment Method</h2>\r\n                            <p>\r\n                                <strong>Method: </strong>\r\n                                {order.paymentMethod}\r\n                            </p>\r\n                            <p><strong>Payment status:</strong></p>\r\n                            {order.isPaid ? (\r\n                                    <ErrMessage variant= 'success'>Paid on {order.paidAt}</ErrMessage>\r\n                             ) : (\r\n                                    <ErrMessage variant= 'warning'>Not paid</ErrMessage>\r\n                             )}\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <h2 className='border border-dark p-2'>Items Ordered</h2>\r\n                            {order.orderItems.length === 0 ? \r\n                            <ErrMessage variant= 'info'>\r\n                                Order is empty !\r\n                            </ErrMessage> : (\r\n                                <ListGroup variant= 'dark'>\r\n                                    {order.orderItems.map((item, index) => (\r\n                                        <ListGroup.Item key={index} className='p-2'>\r\n                                        <Row>\r\n                                            <Col>\r\n                                                <Image src={item.image}  alt={item.name} fluid rounded/>\r\n                                            </Col>\r\n\r\n                                            <Col>\r\n                                                <Row className='mb-2'>\r\n                                                    Product name :\r\n                                                </Row>\r\n                                                <Row>\r\n                                                    <Link to= {`/product/${item.product}`}>\r\n                                                        {item.name}\r\n                                                    </Link>\r\n                                                </Row>\r\n                                            </Col>\r\n                                            <Col md= {4}>\r\n                                                <Row className='mb-2'>\r\n                                                    Qty x Item Price = Total Price\r\n                                                </Row>\r\n                                                <Row>\r\n                                                    {/* with .toFixed(2) we only allow two decimals */}\r\n                                                    {item.qty} X ${item.price} = ${(item.qty * item.price).toFixed(2)}\r\n                                                </Row>\r\n                                            </Col>\r\n                                        </Row>\r\n                                    </ListGroup.Item>\r\n                                    ))}\r\n                                </ListGroup>\r\n                            )}\r\n                        </ListGroup.Item>\r\n\r\n                    </ListGroup>\r\n                </Col>\r\n\r\n                <Col md= {4}>\r\n                    <Card>\r\n                        <ListGroup>\r\n                            <ListGroup.Item>\r\n                                <h2>Order Summary</h2>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Item:</Col>\r\n                                    <Col>{order.itemsPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Shipping:</Col>\r\n                                    <Col>{order.shippingPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Tax:</Col>\r\n                                    <Col>{order.taxPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Total:</Col>\r\n                                    <Col>{order.totalPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n\r\n                            {!order.isPaid && (\r\n                                <ListGroup.Item>\r\n                                    {loadingPay && <Loader />}\r\n\r\n                                    {!sdkReady ? (\r\n                                        <Loader />\r\n                                    ) : (\r\n                                        <PayPalButton \r\n                                            amount={order.totalPrice}\r\n                                            onSuccess={successPaymentHandler}\r\n                                        />\r\n                                    )}\r\n                                </ListGroup.Item>\r\n                            )}\r\n\r\n\r\n                            <ListGroup.Item>\r\n                               {error && <ErrMessage variant= 'danger'>\r\n                                        {error}\r\n                                </ErrMessage>}\r\n                            </ListGroup.Item>\r\n\r\n                        </ListGroup>\r\n                                    \r\n                        {loadingDeliver && <Loader/>}\r\n                        {userInfo && userInfo.isAdmin && order.isPaid && !order.isDelivered && (\r\n                            <ListGroup.Item>\r\n                                <Button\r\n                                type= 'button'\r\n                                className= 'btn btn-block'\r\n                                onClick= {deliverHandler}>\r\n                                    Mark as delivered\r\n                                </Button>\r\n                            </ListGroup.Item>\r\n                        )}\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default OrderDetailPage\r\n","import React, { useState, useEffect } from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Table, Button } from 'react-bootstrap'\r\nimport Loader from '../components/Loader'\r\nimport ErrMessage from '../components/ErrMessage'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { listOrders } from '../actions/orderActions'\r\nimport { Link } from 'react-router-dom'\r\n\r\nfunction OrderListPage({ history }) {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const orderList = useSelector((state) => state.orderList)\r\n    const { loading, error, orders } = orderList\r\n\r\n    const userLogin = useSelector((state) => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n\r\n    useEffect(() => {\r\n        if(userInfo && userInfo.isAdmin){\r\n            dispatch(listOrders())\r\n        }else{\r\n            history.push('/login')\r\n        }\r\n    },[dispatch, history, userInfo])\r\n\r\n\r\n    return (\r\n        <div>\r\n            <div style={{boxShadow: '0 4px 8px 0 rgba(0,0,0,0.1)',\r\n             backgroundColor:'rgba(255, 255, 255, 0.95)'}} className='p-3'>\r\n                <h1>Orders</h1>\r\n                {loading\r\n                    ? (<Loader />)\r\n                    : error\r\n                        ? (<ErrMessage variant= 'danger'>{error}</ErrMessage>)\r\n                        : ( <Table striped bordered hover responsive className= 'table-sm'>\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>Id</th>\r\n                                        <th>User</th>\r\n                                        <th>Date</th>\r\n                                        <th>Total</th>\r\n                                        <th>Paid</th>\r\n                                        <th>Delivered</th>\r\n                                        <th></th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {orders.map((order) => (\r\n                                        <tr key= {order._id}>\r\n                                            <td>{order._id}</td>\r\n                                            <td>{order.user && order.user.name}</td>\r\n                                            <td>{order.createdAt.substring(0,10)}</td>\r\n                                            <td>{order.totalPrice}</td>\r\n                                            <td>{order.isPaid ?\r\n                                                (order.paidAt.substring(0,10))\r\n                                                : (<i className= 'fas fa-check' style= {{color: 'red'}}></i>)}\r\n                                            </td>\r\n                                            <td>{order.isDelivered ?\r\n                                                (order.deliveredAt.substring(0,10))\r\n                                                : (<i className= 'fas fa-check' style= {{color: 'red'}}></i>)}\r\n                                            </td>\r\n                                            <td>\r\n                                                <LinkContainer to= {`/order/${order._id}`}>\r\n                                                    <Button variant= 'light' className= 'btn-sm'>\r\n                                                        Details\r\n                                                    </Button>\r\n                                                </LinkContainer>\r\n                                            </td>\r\n                                        </tr>\r\n                                    ))}\r\n                                </tbody>\r\n                            </Table>\r\n                )}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default OrderListPage\r\n","import React, { useState, useEffect } from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Table, Button } from 'react-bootstrap'\r\nimport Loader from '../components/Loader'\r\nimport ErrMessage from '../components/ErrMessage'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { listUsers, deleteUser } from '../actions/userActions'\r\nimport { Link } from 'react-router-dom'\r\n\r\nfunction UserListPage({ history }) {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userList = useSelector((state) => state.userList)\r\n    const { loading, error, users } = userList\r\n\r\n    const userLogin = useSelector((state) => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const userDelete = useSelector((state) => state.userDelete)\r\n    const { success: successDelete } = userDelete\r\n\r\n\r\n    const deleteHandler = (id) => {\r\n        if(window.confirm('Are you sure you want to delete this user ?')){\r\n        dispatch(deleteUser(id))}\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(userInfo && userInfo.isAdmin){\r\n            dispatch(listUsers())\r\n        }else{\r\n            history.push('/login')\r\n        }\r\n    },[dispatch, history, successDelete, userInfo])\r\n\r\n\r\n    return (\r\n        <div>\r\n            <div className='m-3' style={{boxShadow: '0 4px 8px 0 rgba(0,0,0,0.1)',\r\n             backgroundColor:'rgba(255, 255, 255, 0.95)'}}>\r\n                <h1 className='p-3'>Users</h1>\r\n                {loading\r\n                    ? (<Loader />)\r\n                    : error\r\n                        ? (<ErrMessage variant= 'danger'>{error}</ErrMessage>)\r\n                        : ( <Table striped bordered hover responsive className= 'table-sm'>\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>Id</th>\r\n                                        <th>Name</th>\r\n                                        <th>Email</th>\r\n                                        <th>Staff</th>\r\n                                        <th></th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {users.map((user) => (\r\n                                        <tr key= {user._id}>\r\n                                            <td>{user._id}</td>\r\n                                            <td>{user.name}</td>\r\n                                            <td>{user.email}</td>\r\n                                            <td>{user.isAdmin ?\r\n                                                (<i className= 'fas fa-check' style= {{color: 'green'}}></i>)\r\n                                                : (<i className= 'fas fa-check' style= {{color: 'red'}}></i>)}</td>\r\n                                            <td>\r\n                                                <LinkContainer to= {`/admin/user/${user._id}/edit`}>\r\n                                                    <Button variant= 'light' className= 'btn-sm'>\r\n                                                        <i className= 'fas fa-edit'></i>\r\n                                                    </Button>\r\n                                                </LinkContainer>\r\n                                                <Button variant= 'danger' className= 'btn-sm' onClick= {() => deleteHandler(user._id)}>\r\n                                                        <i className= 'fas fa-trash'></i>\r\n                                                    </Button>\r\n                                            </td>\r\n                                        </tr>\r\n                                    ))}\r\n                                </tbody>\r\n                            </Table>\r\n                )}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserListPage\r\n","import React, {useState, useEffect} from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button} from 'react-bootstrap'\r\nimport Loader from '../components/Loader'\r\nimport ErrMessage from '../components/ErrMessage'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { register } from '../actions/userActions'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { getUserDetails, updateUser } from '../actions/userActions'\r\nimport { USER_UPDATE_RESET } from '../constants/userConstants'\r\n\r\n\r\nfunction UserEditPage( {match, history} ) {\r\n\r\n    const userId = match.params.id\r\n\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [isAdmin, setIsAdmin] = useState(false)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userDetails = useSelector((state) => state.userDetails)\r\n    const { error, loading, user } = userDetails\r\n\r\n    const userUpdate = useSelector((state) => state.userUpdate)\r\n    const { error: errorUpdate, loading: loadingUpdate, success: successUpdate } = userUpdate\r\n\r\n    useEffect(() => {\r\n        if(successUpdate){\r\n            dispatch({ type: USER_UPDATE_RESET })\r\n            history.push('/admin/userlist')\r\n            }else{\r\n            if(!user.name || Number(user._id) !== Number(userId)){\r\n                dispatch(getUserDetails(userId))\r\n            }else{\r\n                setName(user.name)\r\n                setEmail(user.email)\r\n                setIsAdmin(user.isAdmin)\r\n        }}\r\n    },[userId, user])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(updateUser({ _id:user._id , name, email, isAdmin }))\r\n    }\r\n\r\n    return (\r\n        <div>\r\n\r\n            <Link to='/admin/userlist'>\r\n                Go Back\r\n            </Link>\r\n\r\n            <FormContainer>\r\n\r\n                <h1>Edit User</h1>\r\n\r\n                {loadingUpdate && <Loader/>}\r\n                {errorUpdate && <ErrMessage variant= 'danger'>{errorUpdate}</ErrMessage>}\r\n\r\n                {loading ? <Loader/> : error ? <ErrMessage variant= 'danger'>{error}</ErrMessage>\r\n                 : ( \r\n                    <Form onSubmit= {submitHandler}>\r\n                        <Form.Group controlId= 'name'>\r\n                            <Form.Label>\r\n                                Name\r\n                            </Form.Label>\r\n                            <Form.Control\r\n                                type= 'name'\r\n                                placeholder= 'Enter name'\r\n                                value= {name}\r\n                                onChange={(e) => setName(e.target.value)}\r\n                            >\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n                        <Form.Group controlId= 'email'>\r\n                            <Form.Label>\r\n                                Email Address\r\n                            </Form.Label>\r\n                            <Form.Control\r\n                                type= 'email'\r\n                                placeholder= 'address@email.com'\r\n                                value= {email}\r\n                                onChange={(e) => setEmail(e.target.value)}\r\n                            >\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n                        <Form.Group controlId= 'isadmin'>\r\n                            <Form.Check\r\n                                type= 'checkbox'\r\n                                label= 'Is Admin'\r\n                                value= {isAdmin}\r\n                                onChange={(e) => setIsAdmin(e.target.checked)}\r\n                            >\r\n                            </Form.Check>\r\n                        </Form.Group>\r\n                        <Button type='submit' variant='primary'>\r\n                            Update\r\n                        </Button>\r\n                    </Form>\r\n                )}\r\n\r\n                \r\n            </FormContainer>\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default UserEditPage\r\n","import React, { useEffect } from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Table, Button, Row, Col } from 'react-bootstrap'\r\nimport Loader from '../components/Loader'\r\nimport ErrMessage from '../components/ErrMessage'\r\nimport Paginate from '../components/Paginate'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { listProducts, deleteProduct, createProduct } from '../actions/productActions'\r\nimport { PRODUCT_CREATE_RESET } from '../constants/productConstants'\r\n\r\n\r\nfunction ProductListPage({ history, match }) {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const productList = useSelector((state) => state.productList)\r\n    const { loading, error, products, pages, page } = productList\r\n\r\n    const productDelete = useSelector((state) => state.productDelete)\r\n    const { loading: loadingDelete, error: errorDelete, success: successDelete } = productDelete\r\n\r\n    const productCreate = useSelector((state) => state.productCreate)\r\n    const { loading: loadingCreate, error: errorCreate, success: successCreate, product: createdProduct } = productCreate\r\n\r\n    const userLogin = useSelector((state) => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const deleteHandler = (id) => {\r\n        if(window.confirm('Are you sure you want to delete this product ?')){\r\n            dispatch(deleteProduct(id))\r\n        }\r\n    }\r\n\r\n    let keyword = history.location.search\r\n\r\n    useEffect(() => {\r\n        dispatch( { type: PRODUCT_CREATE_RESET } )\r\n\r\n        if(!userInfo.isAdmin){\r\n            history.push('/login')\r\n        }\r\n\r\n        if(successCreate){\r\n            history.push(`/admin/product/${createdProduct._id}/edit`)\r\n        }else{\r\n            dispatch(listProducts(keyword))\r\n        }\r\n    },[dispatch, history, userInfo, successDelete, successCreate, createdProduct, keyword])\r\n\r\n    const createProductHandler = () => {\r\n        dispatch(createProduct())\r\n    }\r\n\r\n    return (\r\n        <div className='my-5'>\r\n            <div style={{boxShadow: '0 4px 8px 0 rgba(0,0,0,0.1)',\r\n             backgroundColor:'rgba(255, 255, 255, 0.95)'}} className='p-3'>\r\n                <Row className= 'align-items-center'>\r\n                    <Col>\r\n                        <h1>Products</h1>\r\n                    </Col>\r\n                    <Col className= 'text-right'>\r\n                        <Button className= 'my-3' onClick= {createProductHandler}>\r\n                            Create Product <i className='fas fa-plus'></i>\r\n                        </Button>\r\n                    </Col>\r\n                </Row>\r\n                {loadingDelete && <Loader />}\r\n                {errorDelete && <ErrMessage variant= 'danger'>{errorDelete}</ErrMessage>}\r\n                {loadingCreate && <Loader />}\r\n                {errorCreate && <ErrMessage variant= 'danger'>{errorCreate}</ErrMessage>}\r\n                {loading\r\n                    ? (<Loader />)\r\n                    : error\r\n                        ? (<ErrMessage variant= 'danger'>{error}</ErrMessage>)\r\n                        : ( <div>\r\n                            <Table striped bordered hover responsive className= 'table-sm'>\r\n                                    <thead>\r\n                                        <tr>\r\n                                            <th>Id</th>\r\n                                            <th>Name</th>\r\n                                            <th>Price</th>\r\n                                            <th>Category</th>\r\n                                            <th>Brand</th>\r\n                                            <th></th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        {products.map((product) => (\r\n                                            <tr key= {product._id}>\r\n                                                <td>{product._id}</td>\r\n                                                <td>{product.name}</td>\r\n                                                <td>{product.price}</td>\r\n                                                <td>{product.category}</td>\r\n                                                <td>{product.brand}</td>\r\n                                                <td>\r\n                                                    <LinkContainer to= {`/admin/product/${product._id}/edit`}>\r\n                                                        <Button variant= 'dark' className= 'btn-sm'>\r\n                                                            <i className= 'fas fa-edit'></i>\r\n                                                        </Button>\r\n                                                    </LinkContainer>\r\n                                                    <Button variant= 'danger' className= 'btn-sm' onClick= {() => deleteHandler(product._id)}>\r\n                                                            <i className= 'fas fa-trash'></i>\r\n                                                        </Button>\r\n                                                </td>\r\n                                            </tr>\r\n                                        ))}\r\n                                    </tbody>\r\n                                </Table>\r\n                                <Paginate page= {page} pages= {pages} isAdmin={true}/>\r\n                        </div>\r\n                )}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProductListPage\r\n","import React, {useState, useEffect} from 'react'\r\nimport axios from 'axios'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button} from 'react-bootstrap'\r\nimport Loader from '../components/Loader'\r\nimport ErrMessage from '../components/ErrMessage'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { listProductDetails, updateProduct } from '../actions/productActions'\r\nimport { PRODUCT_UPDATE_RESET } from '../constants/productConstants'\r\n\r\n\r\nfunction ProductEditPage( {match, history} ) {\r\n\r\n    const productId = match.params.id\r\n\r\n    const [name, setName] = useState('')\r\n    const [price, setPrice] = useState(0)\r\n    const [image, setImage] = useState('')\r\n    const [brand, setBrand] = useState('')\r\n    const [category, setCategory] = useState('')\r\n    const [countInStock, setCountInStock] = useState(0)\r\n    const [description, setDescription] = useState('')\r\n    const [uploading, setUploading] = useState(false)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const productDetails = useSelector((state) => state.productDetails)\r\n    const { error, loading, product } = productDetails\r\n\r\n    const productUpdate = useSelector((state) => state.productUpdate)\r\n    const { error: errorUpdate, loading: loadingUpdate, success: successUpdate } = productUpdate\r\n\r\n\r\n    useEffect(() => {\r\n            if(successUpdate){\r\n                dispatch({ type: PRODUCT_UPDATE_RESET })\r\n                history.push('/admin/productlist')\r\n            }else{\r\n                if(!product.name || product._id !== Number(productId)){\r\n                    dispatch(listProductDetails(productId))\r\n                }else{\r\n                    setName(product.name)\r\n                    setPrice(product.price)\r\n                    setImage(product.image)\r\n                    setBrand(product.brand)\r\n                    setCategory(product.category)\r\n                    setCountInStock(product.countInStock)\r\n                    setDescription(product.description)\r\n                }\r\n             }       \r\n    },[productId, dispatch, history, successUpdate, loading])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(updateProduct({\r\n            _id: productId,\r\n            name,\r\n            price,\r\n            brand,\r\n            countInStock,\r\n            category,\r\n            description,\r\n        }))\r\n    }\r\n\r\n    const uploadFileHandler = async (e) => {\r\n        const file = e.target.files[0]\r\n        const formData = new FormData()\r\n\r\n        formData.append('image', file)\r\n        formData.append('product_id', productId)\r\n\r\n        setUploading(true)\r\n\r\n        try{\r\n            const config = {\r\n                headers: {\r\n                    'Content-Type': 'multipart/form-data'\r\n                }\r\n            }\r\n            const {data} = await axios.post('/api/products/upload/', formData, config)\r\n\r\n            setImage(data)\r\n            setUploading(false)\r\n\r\n        }catch(error){\r\n            setUploading(false)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n\r\n            <Button variant='outline-info my-3'>\r\n                <Link to='/admin/productlist'>\r\n                    Go Back\r\n                </Link>\r\n            </Button>\r\n\r\n            <div className='tp-container'>\r\n                <FormContainer>\r\n                    <h1>Edit Product</h1>\r\n                    {loadingUpdate && <Loader/>}\r\n                    {errorUpdate && <ErrMessage variant= 'danger'>{errorUpdate}</ErrMessage>}\r\n                    {loading ? <Loader/> : error ? <ErrMessage variant= 'danger'>{error}</ErrMessage>\r\n                     : (\r\n                        <Form onSubmit= {submitHandler}>\r\n                            <Form.Group controlId= 'name'>\r\n                                <Form.Label>\r\n                                    Name\r\n                                </Form.Label>\r\n                                <Form.Control\r\n                                    type= 'name'\r\n                                    placeholder= {product.name}\r\n                                    value= {name}\r\n                                    onChange={(e) => setName(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n                \r\n                            <Form.Group controlId= 'price'>\r\n                                <Form.Label>\r\n                                    Price\r\n                                </Form.Label>\r\n                                <Form.Control\r\n                                    type= 'number'\r\n                                    placeholder= {product.price}\r\n                                    value= {price}\r\n                                    onChange={(e) => setPrice(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n                            <Form.Group controlId= 'image'>\r\n                                <Form.Label>\r\n                                    Image\r\n                                </Form.Label>\r\n                                <Form.Control\r\n                                    type= 'text'\r\n                                    placeholder= 'Upload Image'\r\n                                    value= {image}\r\n                                    onChange={(e) => setImage(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                \r\n                                <Form.File\r\n                                id= 'image-file'\r\n                                label= 'Choose file'\r\n                                custom\r\n                                onChange={uploadFileHandler}>\r\n                \r\n                                </Form.File>\r\n                                {uploading && <Loader/>}\r\n                            </Form.Group>\r\n                            <Form.Group controlId= 'brand'>\r\n                                <Form.Label>\r\n                                    Brand\r\n                                </Form.Label>\r\n                                <Form.Control\r\n                                    type= 'text'\r\n                                    placeholder= {product.brand}\r\n                                    value= {brand}\r\n                                    onChange={(e) => setBrand(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n                            <Form.Group controlId= 'countinstock'>\r\n                                <Form.Label>\r\n                                    Stock\r\n                                </Form.Label>\r\n                                <Form.Control\r\n                                    type= 'number'\r\n                                    placeholder= 'Enter stock'\r\n                                    value= {countInStock}\r\n                                    onChange={(e) => setCountInStock(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n                            <Form.Group controlId= 'category'>\r\n                                <Form.Label>\r\n                                    Category\r\n                                </Form.Label>\r\n                                <Form.Control\r\n                                    type= 'Text'\r\n                                    placeholder= 'Enter Category'\r\n                                    value= {category}\r\n                                    onChange={(e) => setCategory(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n                            <Form.Group controlId= 'description'>\r\n                                <Form.Label>\r\n                                    Description\r\n                                </Form.Label>\r\n                                <Form.Control\r\n                                    type= 'Text'\r\n                                    placeholder= 'Enter Description'\r\n                                    value= {description}\r\n                                    onChange={(e) => setDescription(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n                            <Button type='submit' variant='outline-info my-3'>\r\n                                Update\r\n                            </Button>\r\n                        </Form>\r\n                    )}\r\n                \r\n                </FormContainer>\r\n            </div>\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default ProductEditPage\r\n","import './App.css';\nimport Header from './components/Header';\nimport Footer from './components/Footer';\nimport HomePage from './pages/HomePage';\nimport ProductPage from './pages/ProductPage';\nimport CartPage from './pages/CartPage';\nimport LoginPage from './pages/LoginPage';\nimport RegisterPage from './pages/RegisterPage';\nimport ProfilePage from './pages/ProfilePage';\nimport ShippingPage from './pages/ShippingPage';\nimport PaymentPage from './pages/PaymentPage';\nimport PlaceOrderPage from './pages/PlaceOrderPage';\nimport OrderDetailPage from './pages/OrderDetailPage';\nimport OrderListPage from './pages/OrderListPage';\nimport UserListPage from './pages/UserListPage';\nimport UserEditPage from './pages/UserEditPage';\nimport ProductListPage from './pages/ProductListPage';\nimport ProductEditPage from './pages/ProductEditPage';\nimport { Container } from 'react-bootstrap';\nimport { HashRouter as Router, Route } from 'react-router-dom'\n\n\nfunction App() {\n  return (\n    <Router>\n      <Route component={Header} />\n        <main className = ''>\n          <Container id='main-container'>\n            <Route path='/' component={HomePage}  exact />\n            <Route path='/product/:id' component={ProductPage} />\n            <Route path='/cart/:id?' component={CartPage} />\n            <Route path='/login' component= {LoginPage} />\n            <Route path='/register' component= {RegisterPage} />\n            <Route path='/profile' component= {ProfilePage} />\n            <Route path='/shipping' component= {ShippingPage} />\n            <Route path='/payment' component= {PaymentPage} />\n            <Route path='/placeorder' component= {PlaceOrderPage} />\n            <Route path='/order/:id' component= {OrderDetailPage} />\n            <Route path='/admin/userlist' component= {UserListPage} />\n            <Route path='/admin/user/:id/edit' component= {UserEditPage} />\n            <Route path='/admin/productlist/' component= {ProductListPage} />\n            <Route path='/admin/product/:id/edit' component= {ProductEditPage} />\n            <Route path='/admin/orderlist' component= {OrderListPage} />\n          </Container>\n        </main>\n    </Router>\n  );\n}\n\nexport default App;\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport {productDetailsReducer,\r\n        productListReducer,\r\n        productDeleteReducer,\r\n        productCreateReducer,\r\n        productUpdateReducer,\r\n        productReviewCreateReducer,\r\n        topRatedProductReducer, } from './reducers/productReducers';\r\nimport { cartReducer } from './reducers/cartReducers';\r\nimport {userLoginReducer,\r\n        userRegisterReducer,\r\n        userDetailsReducer,\r\n        userUpdateProfileReducer,\r\n        userListReducer,\r\n        userDeleteReducer,\r\n        userUpdateReducer,} from './reducers/userReducers'\r\nimport { orderCreateReducer,\r\n        orderDetailsReducer,\r\n        orderListMyReducer,\r\n        orderListReducer,\r\n        orderPayReducer,\r\n        orderDeliverReducer, } from './reducers/orderReducers';\r\n\r\n\r\nconst reducer = combineReducers({\r\n    productList : productListReducer,\r\n    productDetails : productDetailsReducer,\r\n    productDelete : productDeleteReducer,\r\n    productCreate : productCreateReducer,\r\n    productUpdate : productUpdateReducer,\r\n    productReviewCreate : productReviewCreateReducer,\r\n    productTopRated : topRatedProductReducer,\r\n    cart : cartReducer,\r\n\r\n    userLogin : userLoginReducer,\r\n    userRegister : userRegisterReducer,\r\n    userDetails : userDetailsReducer,\r\n    userUpdateProfile : userUpdateProfileReducer,\r\n    userList : userListReducer,\r\n    userDelete : userDeleteReducer,\r\n    userUpdate : userUpdateReducer,\r\n    \r\n    orderCreate : orderCreateReducer,\r\n    orderDetails : orderDetailsReducer,\r\n    orderPay : orderPayReducer,\r\n    orderDeliver : orderDeliverReducer,\r\n    orderListMy : orderListMyReducer,\r\n    orderList : orderListReducer,\r\n})\r\n\r\nconst cartItemsFromStorage = (localStorage.getItem('cartItems') ?\r\n    JSON.parse(localStorage.getItem('cartItems')) : [] ) \r\n\r\nconst userInfoFromStorage = (localStorage.getItem('userInfo') ?\r\n    JSON.parse(localStorage.getItem('userInfo')) : null ) \r\n\r\nconst shippingAddressFromStorage = (localStorage.getItem('shippingAddress') ?\r\n    JSON.parse(localStorage.getItem('shippingAddress')) : {} )     \r\n\r\nconst initialState = {\r\n    cart: {cartItems: cartItemsFromStorage,\r\n           shippingAddress: shippingAddressFromStorage},\r\n    userLogin: {userInfo: userInfoFromStorage},\r\n}\r\n\r\n// const cartItemsFromStorage = localStorage.getItem('cartItems') ?\r\n//     JSON.parse(localStorage.getItem('carItems')) : []\r\n//     //if the cart items don't exist it returns an empty array\r\n\r\n// const initialState = {\r\n//     cart:{\r\n//         cartItems: cartItemsFromStorage,\r\n//     }\r\n// }\r\n\r\nconst middleware = [thunk]\r\n\r\n// So you can use the chromeDevTools plugin\r\nconst store = createStore(reducer, initialState,\r\n    composeWithDevTools(applyMiddleware(...middleware)))\r\n\r\n\r\nexport default store","import { PRODUCT_LIST_REQUEST,\r\n    PRODUCT_LIST_SUCCESS,\r\n    PRODUCT_LIST_FAIL,\r\n\r\n    PRODUCT_DETAILS_REQUEST,\r\n    PRODUCT_DETAILS_SUCCESS,\r\n    PRODUCT_DETAILS_FAIL,\r\n\r\n    PRODUCT_DELETE_REQUEST,\r\n    PRODUCT_DELETE_SUCCESS,\r\n    PRODUCT_DELETE_FAIL,\r\n   \r\n    PRODUCT_CREATE_REQUEST,\r\n    PRODUCT_CREATE_SUCCESS,\r\n    PRODUCT_CREATE_FAIL,\r\n    PRODUCT_CREATE_RESET,\r\n\r\n    PRODUCT_UPDATE_REQUEST,\r\n    PRODUCT_UPDATE_SUCCESS,\r\n    PRODUCT_UPDATE_FAIL,\r\n    PRODUCT_UPDATE_RESET,\r\n\r\n    PRODUCT_CREATE_REVIEW_REQUEST,\r\n    PRODUCT_CREATE_REVIEW_SUCCESS,\r\n    PRODUCT_CREATE_REVIEW_FAIL,\r\n    PRODUCT_CREATE_REVIEW_RESET,\r\n\r\n    PRODUCT_TOP_REQUEST,\r\n    PRODUCT_TOP_SUCCESS,\r\n    PRODUCT_TOP_FAIL,} from '../constants/productConstants'\r\n\r\nexport const productListReducer = (state = { products: [] }, action) => {\r\n    switch(action.type){\r\n        case 'PRODUCT_LIST_REQUEST':\r\n            return {loading: true, products: []}\r\n\r\n        case 'PRODUCT_LIST_SUCCESS':\r\n            return {loading: false,\r\n                    products: action.payload.products,\r\n                    page: action.payload.page,\r\n                    pages: action.payload.pages}\r\n\r\n        case 'PRODUCT_LIST_FAIL':\r\n            return {loading: false, error: action.payload}    \r\n\r\n        default:\r\n            return state\r\n    }\r\n\r\n}\r\n\r\nexport const productDetailsReducer = (state = { product: {reviews:[]} }, action) => {\r\n    switch(action.type){\r\n        case 'PRODUCT_DETAILS_REQUEST':\r\n            return {loading: true, product: []}\r\n\r\n        case 'PRODUCT_DETAILS_SUCCESS':\r\n            return {loading: false, product: action.payload}\r\n\r\n        case 'PRODUCT_DETAILS_FAIL':\r\n            return {loading: false, error: action.payload}   \r\n\r\n        default:\r\n            return state\r\n    }\r\n\r\n}\r\n\r\nexport const productDeleteReducer = (state = {}, action) => {\r\n    switch(action.type){\r\n        case 'PRODUCT_DELETE_REQUEST':\r\n            return {loading: true }\r\n\r\n        case 'PRODUCT_DELETE_SUCCESS':\r\n            return {loading: false, success: true}\r\n\r\n        case 'PRODUCT_DELETE_FAIL':\r\n            return {loading: false, error: action.payload}    \r\n\r\n        default:\r\n            return state\r\n    }\r\n\r\n}\r\n\r\nexport const productCreateReducer = (state = {}, action) => {\r\n    switch(action.type){\r\n        case 'PRODUCT_CREATE_REQUEST':\r\n            return {loading: true }\r\n\r\n        case 'PRODUCT_CREATE_SUCCESS':\r\n            return {loading: false, success: true, product: action.payload}\r\n\r\n        case 'PRODUCT_CREATE_FAIL':\r\n            return {loading: false, error: action.payload}        \r\n\r\n        case 'PRODUCT_CREATE_RESET':\r\n            return {}\r\n\r\n        default:\r\n            return state\r\n    }\r\n\r\n}\r\n\r\nexport const productUpdateReducer = (state = { product: {} }, action) => {\r\n    switch(action.type){\r\n        case 'PRODUCT_UPDATE_REQUEST':\r\n            return {loading: true }\r\n\r\n        case 'PRODUCT_UPDATE_SUCCESS':\r\n            return {loading: false, success: true, product: action.payload}\r\n\r\n        case 'PRODUCT_UPDATE_FAIL':\r\n            return {loading: false, error: action.payload}        \r\n\r\n        case 'PRODUCT_UPDATE_RESET':\r\n            return { product: {} }\r\n\r\n        default:\r\n            return state\r\n    }\r\n\r\n}\r\n\r\nexport const productReviewCreateReducer = (state = {}, action) => {\r\n    switch(action.type){\r\n        case 'PRODUCT_CREATE_REVIEW_REQUEST':\r\n            return {loading: true }\r\n\r\n        case 'PRODUCT_CREATE_REVIEW_SUCCESS':\r\n            return {loading: false, success: true}\r\n\r\n        case 'PRODUCT_CREATE_REVIEW_FAIL':\r\n            return {loading: false, error: action.payload}        \r\n\r\n        case 'PRODUCT_CREATE_REVIEW_RESET':\r\n            return {}\r\n\r\n        default:\r\n            return state\r\n    }\r\n\r\n}\r\n\r\n export const topRatedProductReducer = (state = { products:[] }, action) => {\r\n    switch(action.type){\r\n        case 'PRODUCT_TOP_REQUEST':\r\n            return {loading: true, products: [] }\r\n\r\n        case 'PRODUCT_TOP_SUCCESS':\r\n            return {loading: false, products: action.payload }\r\n\r\n        case 'PRODUCT_TOP_FAIL':\r\n            return {loading: false, error: action.payload }        \r\n\r\n        default:\r\n            return state\r\n    }\r\n\r\n}","import { CART_ADD_ITEM,\r\n       CART_REMOVE_ITEM,\r\n       CART_SAVE_SHIPPING_ADDRESS,\r\n       CART_SAVE_PAYMENT_METHOD,\r\n       CART_CLEAR_ITEMS, } from '../constants/cartConstants'\r\n\r\nexport const cartReducer = ( state = { cartItems:[] , shippingAddress: {} }, action ) => {\r\n    switch(action.type){\r\n        case CART_ADD_ITEM:\r\n            const item = action.payload\r\n            const existItem = state.cartItems.find((x) => x.product === item.product)\r\n\r\n            if(existItem){\r\n                return{\r\n                    ...state,\r\n                    cartItems: state.cartItems.map((x) => x.product === existItem.product ? item : x)\r\n                }\r\n            }else{\r\n                return{\r\n                    ...state,\r\n                    cartItems:[...state.cartItems, item],\r\n                }\r\n            }\r\n\r\n        case CART_REMOVE_ITEM:\r\n            return{\r\n                ...state,\r\n                cartItems: state.cartItems.filter((x) => x.product !== action.payload )\r\n            }   \r\n             \r\n        case CART_SAVE_SHIPPING_ADDRESS:\r\n            return{ \r\n                ...state,\r\n                shippingAddress: action.payload\r\n            }\r\n\r\n        case CART_SAVE_PAYMENT_METHOD:\r\n            return {\r\n                ...state,\r\n                paymentMethod: action.payload\r\n            }    \r\n        \r\n        case CART_CLEAR_ITEMS:\r\n            return{\r\n                ...state,\r\n                cartItems: [],\r\n            }\r\n            \r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\n// export const cartReducer = (\r\n//     state= { cartItems: [] },\r\n//     action\r\n//     ) => {\r\n//     switch(action.type){\r\n//         // We check if the product we send back in the payload exists in our carItems array\r\n//         case CART_ADD_ITEM:\r\n//             const item = action.payload\r\n//             // x.product points to the id of the product\r\n//             const existItem = state.cartItems.find((x) => x.product === item.product )\r\n\r\n//             if (existItem){\r\n//                 return{\r\n//                     ...state,\r\n//                     cartItems: state.cartItems.map(x => \r\n//                         x.product === existItem.product ? item : x),\r\n//                     //if a cart product matches our new added item, we replace it with the new item\r\n//                     //otherwise we return the previous item\r\n//                 }\r\n//             }else{\r\n//                 return{\r\n//                     ...state,\r\n//                     cartItems:[...state.cartItems, item]\r\n//                     //returns the cart with the new item added\r\n//                 } \r\n//             }\r\n//         default: return state\r\n//     }\r\n// }","import { USER_LOGIN_REQUEST,\r\n    USER_LOGIN_SUCCESS,\r\n    USER_LOGIN_FAIL,\r\n    USER_LOGOUT,\r\n\r\n    USER_REGISTER_REQUEST,\r\n    USER_REGISTER_SUCCESS,\r\n    USER_REGISTER_FAIL,\r\n\r\n    USER_DETAILS_REQUEST,\r\n    USER_DETAILS_SUCCESS,\r\n    USER_DETAILS_FAIL,\r\n    USER_DETAILS_RESET,\r\n\r\n    USER_UPDATE_PROFILE_REQUEST,\r\n    USER_UPDATE_PROFILE_SUCCESS,\r\n    USER_UPDATE_PROFILE_FAIL,\r\n    USER_UPDATE_PROFILE_RESET,\r\n\r\n    USER_LIST_REQUEST,\r\n    USER_LIST_SUCCESS,\r\n    USER_LIST_FAIL,\r\n    USER_LIST_RESET,\r\n\r\n    USER_DELETE_REQUEST,\r\n    USER_DELETE_SUCCESS,\r\n    USER_DELETE_FAIL,\r\n\r\n    USER_UPDATE_REQUEST,\r\n    USER_UPDATE_SUCCESS,\r\n    USER_UPDATE_FAIL,\r\n    USER_UPDATE_RESET,\r\n     } from '../constants/userConstants'\r\n\r\n    export const userLoginReducer = (state = {}, action) => {\r\n        switch(action.type){\r\n\r\n            case 'USER_LOGIN_REQUEST':\r\n                return {loading: true}\r\n                \r\n            case 'USER_LOGIN_SUCCESS':\r\n                return {loading: false, userInfo: action.payload}\r\n\r\n            case 'USER_LOGIN_FAIL':\r\n                return {loading: false, error: action.payload}        \r\n\r\n            case 'USER_LOGOUT':\r\n                return {}\r\n\r\n            default:\r\n                return state\r\n        }\r\n    \r\n    }\r\n\r\n    export const userRegisterReducer = (state = {}, action) => {\r\n        switch(action.type){\r\n\r\n            case 'USER_REGISTER_REQUEST':\r\n                return {loading: true}\r\n                \r\n            case 'USER_REGISTER_SUCCESS':\r\n                return {loading: false, userInfo: action.payload}\r\n\r\n            case 'USER_REGISTER_FAIL':\r\n                return {loading: false, error: action.payload}        \r\n\r\n            default:\r\n                return state\r\n        }\r\n    }\r\n\r\n\r\n    export const userDetailsReducer = (state = {user: []}, action) => {\r\n        switch(action.type){\r\n    \r\n            case 'USER_DETAILS_REQUEST':\r\n                return {...state, loading: true}\r\n                \r\n            case 'USER_DETAILS_SUCCESS':\r\n                return {loading: false, user: action.payload}\r\n\r\n            case 'USER_DETAILS_FAIL':\r\n                return {loading: false, error: action.payload}        \r\n\r\n            case 'USER_DETAILS_RESET':\r\n                return { user: {} }\r\n\r\n            default:\r\n                return state\r\n        }\r\n    }\r\n\r\n    export const userUpdateProfileReducer = (state = {}, action) => {\r\n        switch(action.type){\r\n    \r\n            case 'USER_UPDATE_PROFILE_REQUEST':\r\n                return { loading: true }\r\n                \r\n            case 'USER_UPDATE_PROFILE_SUCCESS':\r\n                return {loading: false, success: true , userInfo: action.payload}\r\n\r\n            case 'USER_UPDATE_PROFILE_FAIL':\r\n                return {loading: false, error: action.payload}        \r\n\r\n            case 'USER_UPDATE_PROFILE_RESET':\r\n                return { user: {} }\r\n\r\n            default:\r\n                return state\r\n        }\r\n    }\r\n\r\n    export const userListReducer = (state = {users:[]}, action) => {\r\n        switch(action.type){\r\n    \r\n            case 'USER_LIST_REQUEST':\r\n                return { loading: true }\r\n                \r\n            case 'USER_LIST_SUCCESS':\r\n                return {loading: false, users: action.payload}\r\n\r\n            case 'USER_LIST_FAIL':\r\n                return {loading: false, error: action.payload}        \r\n\r\n            case 'USER_LIST_RESET':\r\n                return { users: [] }\r\n\r\n            default:\r\n                return state\r\n        }\r\n    }\r\n\r\n    export const userDeleteReducer = (state = {}, action) => {\r\n        switch(action.type){\r\n    \r\n            case 'USER_DELETE_REQUEST':\r\n                return { loading: true }\r\n                \r\n            case 'USER_DELETE_SUCCESS':\r\n                return {loading: false, success: true}\r\n\r\n            case 'USER_DELETE_FAIL':\r\n                return {loading: false, error: action.payload}        \r\n\r\n            default:\r\n                return state\r\n        }\r\n    }\r\n\r\n    export const userUpdateReducer = (state = { user:{} }, action) => {\r\n        switch(action.type){\r\n    \r\n            case 'USER_UPDATE_REQUEST':\r\n                return { loading: true }\r\n                \r\n            case 'USER_UPDATE_SUCCESS':\r\n                return {loading: false, success: true }\r\n\r\n            case 'USER_UPDATE_FAIL':\r\n                return {loading: false, error: action.ayload}        \r\n            \r\n            case 'USER_UPDATE_RESET':\r\n                return { user: {} }\r\n\r\n            default:\r\n                return state\r\n        }\r\n    }","import { ORDER_CREATE_REQUEST,\r\n        ORDER_CREATE_SUCCESS,\r\n        ORDER_CREATE_FAIL,\r\n        ORDER_CREATE_RESET,\r\n\r\n        ORDER_DETAILS_REQUEST,\r\n        ORDER_DETAILS_SUCCESS,\r\n        ORDER_DETAILS_FAIL,\r\n\r\n        ORDER_PAY_REQUEST,\r\n        ORDER_PAY_SUCCESS,\r\n        ORDER_PAY_FAIL,\r\n        ORDER_PAY_RESET,\r\n\r\n        ORDER_LIST_MY_REQUEST,\r\n        ORDER_LIST_MY_SUCCESS,\r\n        ORDER_LIST_MY_FAIL,\r\n        ORDER_LIST_MY_RESET,\r\n\r\n        ORDER_LIST_REQUEST,\r\n        ORDER_LIST_SUCCESS,\r\n        ORDER_LIST_FAIL,\r\n        \r\n\r\n        ORDER_DELIVER_REQUEST,\r\n        ORDER_DELIVER_SUCCESS,\r\n        ORDER_DELIVER_FAIL,\r\n        ORDER_DELIVER_RESET,\r\n    } from '../constants/orderConstants'\r\n\r\n\r\nexport const orderCreateReducer = ( state= {} , action) => {\r\n    switch(action.type){\r\n        case ORDER_CREATE_REQUEST:\r\n            return {\r\n                loading : true\r\n            }\r\n\r\n        case ORDER_CREATE_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                success: true,\r\n                order: action.payload,\r\n            }\r\n\r\n        case ORDER_CREATE_FAIL:\r\n            return {\r\n                loading: false.valueOf,\r\n                error: action.payload,\r\n            }\r\n        \r\n        // After confirming the order, this reducer will clean the order state \r\n        case ORDER_CREATE_RESET:\r\n            return {}\r\n\r\n        default:\r\n            return state\r\n    }\r\n           \r\n}\r\n\r\nexport const orderDetailsReducer = ( state= {loading: true, orderItems: [], shippingAddress:{} } , action) => {\r\n    switch(action.type){\r\n        case ORDER_DETAILS_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading : true,\r\n            }\r\n\r\n        case ORDER_DETAILS_SUCCESS:\r\n            return {\r\n                loading: false,            \r\n                order: action.payload,\r\n            }\r\n\r\n        case ORDER_DETAILS_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload,\r\n            }\r\n        \r\n        default:\r\n            return state\r\n    }\r\n       \r\n}\r\n\r\n\r\nexport const orderPayReducer = ( state= {} , action) => {\r\n    switch(action.type){\r\n        case ORDER_PAY_REQUEST:\r\n            return {\r\n                loading : true,\r\n            }\r\n\r\n        case ORDER_PAY_SUCCESS:\r\n            return {\r\n                loading: false,            \r\n                success: true,\r\n            }\r\n\r\n        case ORDER_PAY_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload,\r\n            }\r\n        \r\n        case ORDER_PAY_RESET:\r\n            return {}\r\n\r\n        default:\r\n            return state\r\n    }\r\n    \r\n}\r\n\r\nexport const orderListMyReducer = ( state= { orders: []} , action) => {\r\n    switch(action.type){\r\n        case ORDER_LIST_MY_REQUEST:\r\n            return {\r\n                loading : true,\r\n            }\r\n\r\n        case ORDER_LIST_MY_SUCCESS:\r\n            return {\r\n                loading: false,            \r\n                orders: action.payload,\r\n            }\r\n\r\n        case ORDER_LIST_MY_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload,\r\n            }\r\n        \r\n        case ORDER_LIST_MY_RESET:\r\n            return { orders: [] }\r\n\r\n        default:\r\n            return state\r\n    }     \r\n\r\n}\r\n\r\n\r\nexport const orderListReducer = ( state= { orders: []} , action) => {\r\n    switch(action.type){\r\n        case ORDER_LIST_REQUEST:\r\n            return {\r\n                loading : true,\r\n            }\r\n\r\n        case ORDER_LIST_SUCCESS:\r\n            return {\r\n                loading: false,            \r\n                orders: action.payload,\r\n            }\r\n\r\n        case ORDER_LIST_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload,\r\n            }\r\n        \r\n        default:\r\n            return state\r\n    }\r\n    \r\n}\r\n\r\nexport const orderDeliverReducer = ( state= {} , action) => {\r\n    switch(action.type){\r\n        case ORDER_DELIVER_REQUEST:\r\n            return {\r\n                loading : true,\r\n            }\r\n\r\n        case ORDER_DELIVER_SUCCESS:\r\n            return {\r\n                loading: false,            \r\n                success: true,\r\n            }\r\n\r\n        case ORDER_DELIVER_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload,\r\n            }\r\n        \r\n        case ORDER_DELIVER_RESET:\r\n            return {}\r\n\r\n        default:\r\n            return state\r\n    }\r\n    \r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './bootstrap.min.css'\nimport './index.css';\nimport { Provider } from 'react-redux'\nimport store from './store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}